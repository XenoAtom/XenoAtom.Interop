//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XenoAtom.Interop
{
    public static unsafe partial class libdrm
    {
        public readonly partial struct drmModeAtomicReq : IEquatable<libdrm.drmModeAtomicReq>
        {
            public drmModeAtomicReq(nint handle) => Handle = handle;
            
            public nint Handle { get; }
            
            public bool Equals(drmModeAtomicReq other) => Handle.Equals(other.Handle);
            
            public override bool Equals(object obj) => obj is drmModeAtomicReq other && Equals(other);
            
            public override int GetHashCode() => Handle.GetHashCode();
            
            public override string ToString() => "0x" + (nint.Size == 8 ? Handle.ToString("X16") : Handle.ToString("X8"));
            
            public static bool operator ==(drmModeAtomicReq left, drmModeAtomicReq right) => left.Equals(right);
            
            public static bool operator !=(drmModeAtomicReq left, drmModeAtomicReq right) => !left.Equals(right);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XenoAtom.Interop
{
    using System.Runtime.InteropServices;
    
    public static unsafe partial class sqlite
    {
        public const string SQLITE_VERSION = "3.44.2";
        
        public const int SQLITE_VERSION_NUMBER = 3044002;
        
        public const string SQLITE_SOURCE_ID = "2023-11-24 11:41:44 ebead0e7230cd33bcec9f95d2183069565b9e709bf745c9b5db65cc0cbf92c0f";
        
        /// <summary>
        /// Successful result
        /// </summary>
        public const int SQLITE_OK = 0;
        
        /// <summary>
        /// Generic error
        /// </summary>
        public const int SQLITE_ERROR = 1;
        
        /// <summary>
        /// Internal logic error in SQLite
        /// </summary>
        public const int SQLITE_INTERNAL = 2;
        
        /// <summary>
        /// Access permission denied
        /// </summary>
        public const int SQLITE_PERM = 3;
        
        /// <summary>
        /// Callback routine requested an abort
        /// </summary>
        public const int SQLITE_ABORT = 4;
        
        /// <summary>
        /// The database file is locked
        /// </summary>
        public const int SQLITE_BUSY = 5;
        
        /// <summary>
        /// A table in the database is locked
        /// </summary>
        public const int SQLITE_LOCKED = 6;
        
        /// <summary>
        /// A malloc() failed
        /// </summary>
        public const int SQLITE_NOMEM = 7;
        
        /// <summary>
        /// Attempt to write a readonly database
        /// </summary>
        public const int SQLITE_READONLY = 8;
        
        /// <summary>
        /// Operation terminated by sqlite3_interrupt()
        /// </summary>
        public const int SQLITE_INTERRUPT = 9;
        
        /// <summary>
        /// Some kind of disk I/O error occurred
        /// </summary>
        public const int SQLITE_IOERR = 10;
        
        /// <summary>
        /// The database disk image is malformed
        /// </summary>
        public const int SQLITE_CORRUPT = 11;
        
        /// <summary>
        /// Unknown opcode in sqlite3_file_control()
        /// </summary>
        public const int SQLITE_NOTFOUND = 12;
        
        /// <summary>
        /// Insertion failed because database is full
        /// </summary>
        public const int SQLITE_FULL = 13;
        
        /// <summary>
        /// Unable to open the database file
        /// </summary>
        public const int SQLITE_CANTOPEN = 14;
        
        /// <summary>
        /// Database lock protocol error
        /// </summary>
        public const int SQLITE_PROTOCOL = 15;
        
        /// <summary>
        /// Internal use only
        /// </summary>
        public const int SQLITE_EMPTY = 16;
        
        /// <summary>
        /// The database schema changed
        /// </summary>
        public const int SQLITE_SCHEMA = 17;
        
        /// <summary>
        /// String or BLOB exceeds size limit
        /// </summary>
        public const int SQLITE_TOOBIG = 18;
        
        /// <summary>
        /// Abort due to constraint violation
        /// </summary>
        public const int SQLITE_CONSTRAINT = 19;
        
        /// <summary>
        /// Data type mismatch
        /// </summary>
        public const int SQLITE_MISMATCH = 20;
        
        /// <summary>
        /// Library used incorrectly
        /// </summary>
        public const int SQLITE_MISUSE = 21;
        
        /// <summary>
        /// Uses OS features not supported on host
        /// </summary>
        public const int SQLITE_NOLFS = 22;
        
        /// <summary>
        /// Authorization denied
        /// </summary>
        public const int SQLITE_AUTH = 23;
        
        /// <summary>
        /// Not used
        /// </summary>
        public const int SQLITE_FORMAT = 24;
        
        /// <summary>
        /// 2nd parameter to sqlite3_bind out of range
        /// </summary>
        public const int SQLITE_RANGE = 25;
        
        /// <summary>
        /// File opened that is not a database file
        /// </summary>
        public const int SQLITE_NOTADB = 26;
        
        /// <summary>
        /// Notifications from sqlite3_log()
        /// </summary>
        public const int SQLITE_NOTICE = 27;
        
        /// <summary>
        /// Warnings from sqlite3_log()
        /// </summary>
        public const int SQLITE_WARNING = 28;
        
        /// <summary>
        /// sqlite3_step() has another row ready
        /// </summary>
        public const int SQLITE_ROW = 100;
        
        /// <summary>
        /// sqlite3_step() has finished executing
        /// </summary>
        public const int SQLITE_DONE = 101;
        
        public const int SQLITE_ERROR_MISSING_COLLSEQ = (SQLITE_ERROR | (1 << 8));
        
        public const int SQLITE_ERROR_RETRY = (SQLITE_ERROR | (2 << 8));
        
        public const int SQLITE_ERROR_SNAPSHOT = (SQLITE_ERROR | (3 << 8));
        
        public const int SQLITE_IOERR_READ = (SQLITE_IOERR | (1 << 8));
        
        public const int SQLITE_IOERR_SHORT_READ = (SQLITE_IOERR | (2 << 8));
        
        public const int SQLITE_IOERR_WRITE = (SQLITE_IOERR | (3 << 8));
        
        public const int SQLITE_IOERR_FSYNC = (SQLITE_IOERR | (4 << 8));
        
        public const int SQLITE_IOERR_DIR_FSYNC = (SQLITE_IOERR | (5 << 8));
        
        public const int SQLITE_IOERR_TRUNCATE = (SQLITE_IOERR | (6 << 8));
        
        public const int SQLITE_IOERR_FSTAT = (SQLITE_IOERR | (7 << 8));
        
        public const int SQLITE_IOERR_UNLOCK = (SQLITE_IOERR | (8 << 8));
        
        public const int SQLITE_IOERR_RDLOCK = (SQLITE_IOERR | (9 << 8));
        
        public const int SQLITE_IOERR_DELETE = (SQLITE_IOERR | (10 << 8));
        
        public const int SQLITE_IOERR_BLOCKED = (SQLITE_IOERR | (11 << 8));
        
        public const int SQLITE_IOERR_NOMEM = (SQLITE_IOERR | (12 << 8));
        
        public const int SQLITE_IOERR_ACCESS = (SQLITE_IOERR | (13 << 8));
        
        public const int SQLITE_IOERR_CHECKRESERVEDLOCK = (SQLITE_IOERR | (14 << 8));
        
        public const int SQLITE_IOERR_LOCK = (SQLITE_IOERR | (15 << 8));
        
        public const int SQLITE_IOERR_CLOSE = (SQLITE_IOERR | (16 << 8));
        
        public const int SQLITE_IOERR_DIR_CLOSE = (SQLITE_IOERR | (17 << 8));
        
        public const int SQLITE_IOERR_SHMOPEN = (SQLITE_IOERR | (18 << 8));
        
        public const int SQLITE_IOERR_SHMSIZE = (SQLITE_IOERR | (19 << 8));
        
        public const int SQLITE_IOERR_SHMLOCK = (SQLITE_IOERR | (20 << 8));
        
        public const int SQLITE_IOERR_SHMMAP = (SQLITE_IOERR | (21 << 8));
        
        public const int SQLITE_IOERR_SEEK = (SQLITE_IOERR | (22 << 8));
        
        public const int SQLITE_IOERR_DELETE_NOENT = (SQLITE_IOERR | (23 << 8));
        
        public const int SQLITE_IOERR_MMAP = (SQLITE_IOERR | (24 << 8));
        
        public const int SQLITE_IOERR_GETTEMPPATH = (SQLITE_IOERR | (25 << 8));
        
        public const int SQLITE_IOERR_CONVPATH = (SQLITE_IOERR | (26 << 8));
        
        public const int SQLITE_IOERR_VNODE = (SQLITE_IOERR | (27 << 8));
        
        public const int SQLITE_IOERR_AUTH = (SQLITE_IOERR | (28 << 8));
        
        public const int SQLITE_IOERR_BEGIN_ATOMIC = (SQLITE_IOERR | (29 << 8));
        
        public const int SQLITE_IOERR_COMMIT_ATOMIC = (SQLITE_IOERR | (30 << 8));
        
        public const int SQLITE_IOERR_ROLLBACK_ATOMIC = (SQLITE_IOERR | (31 << 8));
        
        public const int SQLITE_IOERR_DATA = (SQLITE_IOERR | (32 << 8));
        
        public const int SQLITE_IOERR_CORRUPTFS = (SQLITE_IOERR | (33 << 8));
        
        public const int SQLITE_IOERR_IN_PAGE = (SQLITE_IOERR | (34 << 8));
        
        public const int SQLITE_LOCKED_SHAREDCACHE = (SQLITE_LOCKED | (1 << 8));
        
        public const int SQLITE_LOCKED_VTAB = (SQLITE_LOCKED | (2 << 8));
        
        public const int SQLITE_BUSY_RECOVERY = (SQLITE_BUSY | (1 << 8));
        
        public const int SQLITE_BUSY_SNAPSHOT = (SQLITE_BUSY | (2 << 8));
        
        public const int SQLITE_BUSY_TIMEOUT = (SQLITE_BUSY | (3 << 8));
        
        public const int SQLITE_CANTOPEN_NOTEMPDIR = (SQLITE_CANTOPEN | (1 << 8));
        
        public const int SQLITE_CANTOPEN_ISDIR = (SQLITE_CANTOPEN | (2 << 8));
        
        public const int SQLITE_CANTOPEN_FULLPATH = (SQLITE_CANTOPEN | (3 << 8));
        
        public const int SQLITE_CANTOPEN_CONVPATH = (SQLITE_CANTOPEN | (4 << 8));
        
        /// <summary>
        /// Not Used
        /// </summary>
        public const int SQLITE_CANTOPEN_DIRTYWAL = (SQLITE_CANTOPEN | (5 << 8));
        
        public const int SQLITE_CANTOPEN_SYMLINK = (SQLITE_CANTOPEN | (6 << 8));
        
        public const int SQLITE_CORRUPT_VTAB = (SQLITE_CORRUPT | (1 << 8));
        
        public const int SQLITE_CORRUPT_SEQUENCE = (SQLITE_CORRUPT | (2 << 8));
        
        public const int SQLITE_CORRUPT_INDEX = (SQLITE_CORRUPT | (3 << 8));
        
        public const int SQLITE_READONLY_RECOVERY = (SQLITE_READONLY | (1 << 8));
        
        public const int SQLITE_READONLY_CANTLOCK = (SQLITE_READONLY | (2 << 8));
        
        public const int SQLITE_READONLY_ROLLBACK = (SQLITE_READONLY | (3 << 8));
        
        public const int SQLITE_READONLY_DBMOVED = (SQLITE_READONLY | (4 << 8));
        
        public const int SQLITE_READONLY_CANTINIT = (SQLITE_READONLY | (5 << 8));
        
        public const int SQLITE_READONLY_DIRECTORY = (SQLITE_READONLY | (6 << 8));
        
        public const int SQLITE_ABORT_ROLLBACK = (SQLITE_ABORT | (2 << 8));
        
        public const int SQLITE_CONSTRAINT_CHECK = (SQLITE_CONSTRAINT | (1 << 8));
        
        public const int SQLITE_CONSTRAINT_COMMITHOOK = (SQLITE_CONSTRAINT | (2 << 8));
        
        public const int SQLITE_CONSTRAINT_FOREIGNKEY = (SQLITE_CONSTRAINT | (3 << 8));
        
        public const int SQLITE_CONSTRAINT_FUNCTION = (SQLITE_CONSTRAINT | (4 << 8));
        
        public const int SQLITE_CONSTRAINT_NOTNULL = (SQLITE_CONSTRAINT | (5 << 8));
        
        public const int SQLITE_CONSTRAINT_PRIMARYKEY = (SQLITE_CONSTRAINT | (6 << 8));
        
        public const int SQLITE_CONSTRAINT_TRIGGER = (SQLITE_CONSTRAINT | (7 << 8));
        
        public const int SQLITE_CONSTRAINT_UNIQUE = (SQLITE_CONSTRAINT | (8 << 8));
        
        public const int SQLITE_CONSTRAINT_VTAB = (SQLITE_CONSTRAINT | (9 << 8));
        
        public const int SQLITE_CONSTRAINT_ROWID = (SQLITE_CONSTRAINT | (10 << 8));
        
        public const int SQLITE_CONSTRAINT_PINNED = (SQLITE_CONSTRAINT | (11 << 8));
        
        public const int SQLITE_CONSTRAINT_DATATYPE = (SQLITE_CONSTRAINT | (12 << 8));
        
        public const int SQLITE_NOTICE_RECOVER_WAL = (SQLITE_NOTICE | (1 << 8));
        
        public const int SQLITE_NOTICE_RECOVER_ROLLBACK = (SQLITE_NOTICE | (2 << 8));
        
        public const int SQLITE_NOTICE_RBU = (SQLITE_NOTICE | (3 << 8));
        
        public const int SQLITE_WARNING_AUTOINDEX = (SQLITE_WARNING | (1 << 8));
        
        public const int SQLITE_AUTH_USER = (SQLITE_AUTH | (1 << 8));
        
        public const int SQLITE_OK_LOAD_PERMANENTLY = (SQLITE_OK | (1 << 8));
        
        /// <summary>
        /// internal use only
        /// </summary>
        public const int SQLITE_OK_SYMLINK = (SQLITE_OK | (2 << 8));
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_READONLY = 0x00000001;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_READWRITE = 0x00000002;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_CREATE = 0x00000004;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_DELETEONCLOSE = 0x00000008;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_EXCLUSIVE = 0x00000010;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_AUTOPROXY = 0x00000020;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_URI = 0x00000040;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_MEMORY = 0x00000080;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_MAIN_DB = 0x00000100;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_TEMP_DB = 0x00000200;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_TRANSIENT_DB = 0x00000400;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_MAIN_JOURNAL = 0x00000800;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_TEMP_JOURNAL = 0x00001000;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_SUBJOURNAL = 0x00002000;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_SUPER_JOURNAL = 0x00004000;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_NOMUTEX = 0x00008000;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_FULLMUTEX = 0x00010000;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_SHAREDCACHE = 0x00020000;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_PRIVATECACHE = 0x00040000;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_WAL = 0x00080000;
        
        /// <summary>
        /// Ok for sqlite3_open_v2()
        /// </summary>
        public const int SQLITE_OPEN_NOFOLLOW = 0x01000000;
        
        /// <summary>
        /// Extended result codes
        /// </summary>
        public const int SQLITE_OPEN_EXRESCODE = 0x02000000;
        
        /// <summary>
        /// VFS only
        /// </summary>
        public const int SQLITE_OPEN_MASTER_JOURNAL = 0x00004000;
        
        public const int SQLITE_IOCAP_ATOMIC = 0x00000001;
        
        public const int SQLITE_IOCAP_ATOMIC512 = 0x00000002;
        
        public const int SQLITE_IOCAP_ATOMIC1K = 0x00000004;
        
        public const int SQLITE_IOCAP_ATOMIC2K = 0x00000008;
        
        public const int SQLITE_IOCAP_ATOMIC4K = 0x00000010;
        
        public const int SQLITE_IOCAP_ATOMIC8K = 0x00000020;
        
        public const int SQLITE_IOCAP_ATOMIC16K = 0x00000040;
        
        public const int SQLITE_IOCAP_ATOMIC32K = 0x00000080;
        
        public const int SQLITE_IOCAP_ATOMIC64K = 0x00000100;
        
        public const int SQLITE_IOCAP_SAFE_APPEND = 0x00000200;
        
        public const int SQLITE_IOCAP_SEQUENTIAL = 0x00000400;
        
        public const int SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 0x00000800;
        
        public const int SQLITE_IOCAP_POWERSAFE_OVERWRITE = 0x00001000;
        
        public const int SQLITE_IOCAP_IMMUTABLE = 0x00002000;
        
        public const int SQLITE_IOCAP_BATCH_ATOMIC = 0x00004000;
        
        /// <summary>
        /// xUnlock() only
        /// </summary>
        public const int SQLITE_LOCK_NONE = 0;
        
        /// <summary>
        /// xLock() or xUnlock()
        /// </summary>
        public const int SQLITE_LOCK_SHARED = 1;
        
        /// <summary>
        /// xLock() only
        /// </summary>
        public const int SQLITE_LOCK_RESERVED = 2;
        
        /// <summary>
        /// xLock() only
        /// </summary>
        public const int SQLITE_LOCK_PENDING = 3;
        
        /// <summary>
        /// xLock() only
        /// </summary>
        public const int SQLITE_LOCK_EXCLUSIVE = 4;
        
        public const int SQLITE_SYNC_NORMAL = 0x00002;
        
        public const int SQLITE_SYNC_FULL = 0x00003;
        
        public const int SQLITE_SYNC_DATAONLY = 0x00010;
        
        public const int SQLITE_FCNTL_LOCKSTATE = 1;
        
        public const int SQLITE_FCNTL_GET_LOCKPROXYFILE = 2;
        
        public const int SQLITE_FCNTL_SET_LOCKPROXYFILE = 3;
        
        public const int SQLITE_FCNTL_LAST_ERRNO = 4;
        
        public const int SQLITE_FCNTL_SIZE_HINT = 5;
        
        public const int SQLITE_FCNTL_CHUNK_SIZE = 6;
        
        public const int SQLITE_FCNTL_FILE_POINTER = 7;
        
        public const int SQLITE_FCNTL_SYNC_OMITTED = 8;
        
        public const int SQLITE_FCNTL_WIN32_AV_RETRY = 9;
        
        public const int SQLITE_FCNTL_PERSIST_WAL = 10;
        
        public const int SQLITE_FCNTL_OVERWRITE = 11;
        
        public const int SQLITE_FCNTL_VFSNAME = 12;
        
        public const int SQLITE_FCNTL_POWERSAFE_OVERWRITE = 13;
        
        public const int SQLITE_FCNTL_PRAGMA = 14;
        
        public const int SQLITE_FCNTL_BUSYHANDLER = 15;
        
        public const int SQLITE_FCNTL_TEMPFILENAME = 16;
        
        public const int SQLITE_FCNTL_MMAP_SIZE = 18;
        
        public const int SQLITE_FCNTL_TRACE = 19;
        
        public const int SQLITE_FCNTL_HAS_MOVED = 20;
        
        public const int SQLITE_FCNTL_SYNC = 21;
        
        public const int SQLITE_FCNTL_COMMIT_PHASETWO = 22;
        
        public const int SQLITE_FCNTL_WIN32_SET_HANDLE = 23;
        
        public const int SQLITE_FCNTL_WAL_BLOCK = 24;
        
        public const int SQLITE_FCNTL_ZIPVFS = 25;
        
        public const int SQLITE_FCNTL_RBU = 26;
        
        public const int SQLITE_FCNTL_VFS_POINTER = 27;
        
        public const int SQLITE_FCNTL_JOURNAL_POINTER = 28;
        
        public const int SQLITE_FCNTL_WIN32_GET_HANDLE = 29;
        
        public const int SQLITE_FCNTL_PDB = 30;
        
        public const int SQLITE_FCNTL_BEGIN_ATOMIC_WRITE = 31;
        
        public const int SQLITE_FCNTL_COMMIT_ATOMIC_WRITE = 32;
        
        public const int SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE = 33;
        
        public const int SQLITE_FCNTL_LOCK_TIMEOUT = 34;
        
        public const int SQLITE_FCNTL_DATA_VERSION = 35;
        
        public const int SQLITE_FCNTL_SIZE_LIMIT = 36;
        
        public const int SQLITE_FCNTL_CKPT_DONE = 37;
        
        public const int SQLITE_FCNTL_RESERVE_BYTES = 38;
        
        public const int SQLITE_FCNTL_CKPT_START = 39;
        
        public const int SQLITE_FCNTL_EXTERNAL_READER = 40;
        
        public const int SQLITE_FCNTL_CKSM_FILE = 41;
        
        public const int SQLITE_FCNTL_RESET_CACHE = 42;
        
        public const int SQLITE_GET_LOCKPROXYFILE = 2;
        
        public const int SQLITE_SET_LOCKPROXYFILE = 3;
        
        public const int SQLITE_LAST_ERRNO = 4;
        
        public const int SQLITE_ACCESS_EXISTS = 0;
        
        /// <summary>
        /// Used by PRAGMA temp_store_directory
        /// </summary>
        public const int SQLITE_ACCESS_READWRITE = 1;
        
        /// <summary>
        /// Unused
        /// </summary>
        public const int SQLITE_ACCESS_READ = 2;
        
        public const int SQLITE_SHM_UNLOCK = 1;
        
        public const int SQLITE_SHM_LOCK = 2;
        
        public const int SQLITE_SHM_SHARED = 4;
        
        public const int SQLITE_SHM_EXCLUSIVE = 8;
        
        public const int SQLITE_SHM_NLOCK = 8;
        
        /// <summary>
        /// nil
        /// </summary>
        public const int SQLITE_CONFIG_SINGLETHREAD = 1;
        
        /// <summary>
        /// nil
        /// </summary>
        public const int SQLITE_CONFIG_MULTITHREAD = 2;
        
        /// <summary>
        /// nil
        /// </summary>
        public const int SQLITE_CONFIG_SERIALIZED = 3;
        
        /// <summary>
        /// sqlite3_mem_methods*
        /// </summary>
        public const int SQLITE_CONFIG_MALLOC = 4;
        
        /// <summary>
        /// sqlite3_mem_methods*
        /// </summary>
        public const int SQLITE_CONFIG_GETMALLOC = 5;
        
        /// <summary>
        /// No longer used
        /// </summary>
        public const int SQLITE_CONFIG_SCRATCH = 6;
        
        /// <summary>
        /// void*, int sz, int N
        /// </summary>
        public const int SQLITE_CONFIG_PAGECACHE = 7;
        
        /// <summary>
        /// void*, int nByte, int min
        /// </summary>
        public const int SQLITE_CONFIG_HEAP = 8;
        
        /// <summary>
        /// boolean
        /// </summary>
        public const int SQLITE_CONFIG_MEMSTATUS = 9;
        
        /// <summary>
        /// sqlite3_mutex_methods*
        /// </summary>
        public const int SQLITE_CONFIG_MUTEX = 10;
        
        /// <summary>
        /// sqlite3_mutex_methods*
        /// </summary>
        public const int SQLITE_CONFIG_GETMUTEX = 11;
        
        /// <summary>
        /// int int
        /// </summary>
        public const int SQLITE_CONFIG_LOOKASIDE = 13;
        
        /// <summary>
        /// no-op
        /// </summary>
        public const int SQLITE_CONFIG_PCACHE = 14;
        
        /// <summary>
        /// no-op
        /// </summary>
        public const int SQLITE_CONFIG_GETPCACHE = 15;
        
        /// <summary>
        /// xFunc, void*
        /// </summary>
        public const int SQLITE_CONFIG_LOG = 16;
        
        /// <summary>
        /// int
        /// </summary>
        public const int SQLITE_CONFIG_URI = 17;
        
        /// <summary>
        /// sqlite3_pcache_methods2*
        /// </summary>
        public const int SQLITE_CONFIG_PCACHE2 = 18;
        
        /// <summary>
        /// sqlite3_pcache_methods2*
        /// </summary>
        public const int SQLITE_CONFIG_GETPCACHE2 = 19;
        
        /// <summary>
        /// int
        /// </summary>
        public const int SQLITE_CONFIG_COVERING_INDEX_SCAN = 20;
        
        /// <summary>
        /// xSqllog, void*
        /// </summary>
        public const int SQLITE_CONFIG_SQLLOG = 21;
        
        /// <summary>
        /// sqlite3_int64, sqlite3_int64
        /// </summary>
        public const int SQLITE_CONFIG_MMAP_SIZE = 22;
        
        /// <summary>
        /// int nByte
        /// </summary>
        public const int SQLITE_CONFIG_WIN32_HEAPSIZE = 23;
        
        /// <summary>
        /// int *psz
        /// </summary>
        public const int SQLITE_CONFIG_PCACHE_HDRSZ = 24;
        
        /// <summary>
        /// unsigned int szPma
        /// </summary>
        public const int SQLITE_CONFIG_PMASZ = 25;
        
        /// <summary>
        /// int nByte
        /// </summary>
        public const int SQLITE_CONFIG_STMTJRNL_SPILL = 26;
        
        /// <summary>
        /// boolean
        /// </summary>
        public const int SQLITE_CONFIG_SMALL_MALLOC = 27;
        
        /// <summary>
        /// int nByte
        /// </summary>
        public const int SQLITE_CONFIG_SORTERREF_SIZE = 28;
        
        /// <summary>
        /// sqlite3_int64
        /// </summary>
        public const int SQLITE_CONFIG_MEMDB_MAXSIZE = 29;
        
        /// <summary>
        /// const char*
        /// </summary>
        public const int SQLITE_DBCONFIG_MAINDBNAME = 1000;
        
        /// <summary>
        /// void* int int
        /// </summary>
        public const int SQLITE_DBCONFIG_LOOKASIDE = 1001;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_ENABLE_FKEY = 1002;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_ENABLE_TRIGGER = 1003;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = 1004;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION = 1005;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = 1006;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_ENABLE_QPSG = 1007;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_TRIGGER_EQP = 1008;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_RESET_DATABASE = 1009;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_DEFENSIVE = 1010;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_WRITABLE_SCHEMA = 1011;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_LEGACY_ALTER_TABLE = 1012;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_DQS_DML = 1013;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_DQS_DDL = 1014;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_ENABLE_VIEW = 1015;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_LEGACY_FILE_FORMAT = 1016;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_TRUSTED_SCHEMA = 1017;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_STMT_SCANSTATUS = 1018;
        
        /// <summary>
        /// int int*
        /// </summary>
        public const int SQLITE_DBCONFIG_REVERSE_SCANORDER = 1019;
        
        /// <summary>
        /// Largest DBCONFIG
        /// </summary>
        public const int SQLITE_DBCONFIG_MAX = 1019;
        
        /// <summary>
        /// Abort the SQL statement with an error
        /// </summary>
        public const int SQLITE_DENY = 1;
        
        /// <summary>
        /// Don't allow access, but don't generate an error
        /// </summary>
        public const int SQLITE_IGNORE = 2;
        
        /// <summary>
        /// Index Name      Table Name
        /// </summary>
        public const int SQLITE_CREATE_INDEX = 1;
        
        /// <summary>
        /// Table Name      NULL
        /// </summary>
        public const int SQLITE_CREATE_TABLE = 2;
        
        /// <summary>
        /// Index Name      Table Name
        /// </summary>
        public const int SQLITE_CREATE_TEMP_INDEX = 3;
        
        /// <summary>
        /// Table Name      NULL
        /// </summary>
        public const int SQLITE_CREATE_TEMP_TABLE = 4;
        
        /// <summary>
        /// Trigger Name    Table Name
        /// </summary>
        public const int SQLITE_CREATE_TEMP_TRIGGER = 5;
        
        /// <summary>
        /// View Name       NULL
        /// </summary>
        public const int SQLITE_CREATE_TEMP_VIEW = 6;
        
        /// <summary>
        /// Trigger Name    Table Name
        /// </summary>
        public const int SQLITE_CREATE_TRIGGER = 7;
        
        /// <summary>
        /// View Name       NULL
        /// </summary>
        public const int SQLITE_CREATE_VIEW = 8;
        
        /// <summary>
        /// Table Name      NULL
        /// </summary>
        public const int SQLITE_DELETE = 9;
        
        /// <summary>
        /// Index Name      Table Name
        /// </summary>
        public const int SQLITE_DROP_INDEX = 10;
        
        /// <summary>
        /// Table Name      NULL
        /// </summary>
        public const int SQLITE_DROP_TABLE = 11;
        
        /// <summary>
        /// Index Name      Table Name
        /// </summary>
        public const int SQLITE_DROP_TEMP_INDEX = 12;
        
        /// <summary>
        /// Table Name      NULL
        /// </summary>
        public const int SQLITE_DROP_TEMP_TABLE = 13;
        
        /// <summary>
        /// Trigger Name    Table Name
        /// </summary>
        public const int SQLITE_DROP_TEMP_TRIGGER = 14;
        
        /// <summary>
        /// View Name       NULL
        /// </summary>
        public const int SQLITE_DROP_TEMP_VIEW = 15;
        
        /// <summary>
        /// Trigger Name    Table Name
        /// </summary>
        public const int SQLITE_DROP_TRIGGER = 16;
        
        /// <summary>
        /// View Name       NULL
        /// </summary>
        public const int SQLITE_DROP_VIEW = 17;
        
        /// <summary>
        /// Table Name      NULL
        /// </summary>
        public const int SQLITE_INSERT = 18;
        
        /// <summary>
        /// Pragma Name     1st arg or NULL
        /// </summary>
        public const int SQLITE_PRAGMA = 19;
        
        /// <summary>
        /// Table Name      Column Name
        /// </summary>
        public const int SQLITE_READ = 20;
        
        /// <summary>
        /// NULL            NULL
        /// </summary>
        public const int SQLITE_SELECT = 21;
        
        /// <summary>
        /// Operation       NULL
        /// </summary>
        public const int SQLITE_TRANSACTION = 22;
        
        /// <summary>
        /// Table Name      Column Name
        /// </summary>
        public const int SQLITE_UPDATE = 23;
        
        /// <summary>
        /// Filename        NULL
        /// </summary>
        public const int SQLITE_ATTACH = 24;
        
        /// <summary>
        /// Database Name   NULL
        /// </summary>
        public const int SQLITE_DETACH = 25;
        
        /// <summary>
        /// Database Name   Table Name
        /// </summary>
        public const int SQLITE_ALTER_TABLE = 26;
        
        /// <summary>
        /// Index Name      NULL
        /// </summary>
        public const int SQLITE_REINDEX = 27;
        
        /// <summary>
        /// Table Name      NULL
        /// </summary>
        public const int SQLITE_ANALYZE = 28;
        
        /// <summary>
        /// Table Name      Module Name
        /// </summary>
        public const int SQLITE_CREATE_VTABLE = 29;
        
        /// <summary>
        /// Table Name      Module Name
        /// </summary>
        public const int SQLITE_DROP_VTABLE = 30;
        
        /// <summary>
        /// NULL            Function Name
        /// </summary>
        public const int SQLITE_FUNCTION = 31;
        
        /// <summary>
        /// Operation       Savepoint Name
        /// </summary>
        public const int SQLITE_SAVEPOINT = 32;
        
        /// <summary>
        /// No longer used
        /// </summary>
        public const int SQLITE_COPY = 0;
        
        /// <summary>
        /// NULL            NULL
        /// </summary>
        public const int SQLITE_RECURSIVE = 33;
        
        public const int SQLITE_TRACE_STMT = 0x01;
        
        public const int SQLITE_TRACE_PROFILE = 0x02;
        
        public const int SQLITE_TRACE_ROW = 0x04;
        
        public const int SQLITE_TRACE_CLOSE = 0x08;
        
        public const int SQLITE_LIMIT_LENGTH = 0;
        
        public const int SQLITE_LIMIT_SQL_LENGTH = 1;
        
        public const int SQLITE_LIMIT_COLUMN = 2;
        
        public const int SQLITE_LIMIT_EXPR_DEPTH = 3;
        
        public const int SQLITE_LIMIT_COMPOUND_SELECT = 4;
        
        public const int SQLITE_LIMIT_VDBE_OP = 5;
        
        public const int SQLITE_LIMIT_FUNCTION_ARG = 6;
        
        public const int SQLITE_LIMIT_ATTACHED = 7;
        
        public const int SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8;
        
        public const int SQLITE_LIMIT_VARIABLE_NUMBER = 9;
        
        public const int SQLITE_LIMIT_TRIGGER_DEPTH = 10;
        
        public const int SQLITE_LIMIT_WORKER_THREADS = 11;
        
        public const int SQLITE_PREPARE_PERSISTENT = 0x01;
        
        public const int SQLITE_PREPARE_NORMALIZE = 0x02;
        
        public const int SQLITE_PREPARE_NO_VTAB = 0x04;
        
        public const int SQLITE_INTEGER = 1;
        
        public const int SQLITE_FLOAT = 2;
        
        public const int SQLITE_BLOB = 4;
        
        public const int SQLITE_NULL = 5;
        
        public const int SQLITE_TEXT = 3;
        
        /// <summary>
        /// IMP: R-37514-35566
        /// </summary>
        public const int SQLITE_UTF8 = 1;
        
        /// <summary>
        /// IMP: R-03371-37637
        /// </summary>
        public const int SQLITE_UTF16LE = 2;
        
        /// <summary>
        /// IMP: R-51971-34154
        /// </summary>
        public const int SQLITE_UTF16BE = 3;
        
        /// <summary>
        /// Use native byte order
        /// </summary>
        public const int SQLITE_UTF16 = 4;
        
        /// <summary>
        /// Deprecated
        /// </summary>
        public const int SQLITE_ANY = 5;
        
        /// <summary>
        /// sqlite3_create_collation only
        /// </summary>
        public const int SQLITE_UTF16_ALIGNED = 8;
        
        public const int SQLITE_DETERMINISTIC = 0x000000800;
        
        public const int SQLITE_DIRECTONLY = 0x000080000;
        
        public const int SQLITE_SUBTYPE = 0x000100000;
        
        public const int SQLITE_INNOCUOUS = 0x000200000;
        
        public const int SQLITE_RESULT_SUBTYPE = 0x001000000;
        
        public const int SQLITE_WIN32_DATA_DIRECTORY_TYPE = 1;
        
        public const int SQLITE_WIN32_TEMP_DIRECTORY_TYPE = 2;
        
        public const int SQLITE_TXN_NONE = 0;
        
        public const int SQLITE_TXN_READ = 1;
        
        public const int SQLITE_TXN_WRITE = 2;
        
        /// <summary>
        /// Scan visits at most 1 row
        /// </summary>
        public const int SQLITE_INDEX_SCAN_UNIQUE = 1;
        
        public const int SQLITE_INDEX_CONSTRAINT_EQ = 2;
        
        public const int SQLITE_INDEX_CONSTRAINT_GT = 4;
        
        public const int SQLITE_INDEX_CONSTRAINT_LE = 8;
        
        public const int SQLITE_INDEX_CONSTRAINT_LT = 16;
        
        public const int SQLITE_INDEX_CONSTRAINT_GE = 32;
        
        public const int SQLITE_INDEX_CONSTRAINT_MATCH = 64;
        
        public const int SQLITE_INDEX_CONSTRAINT_LIKE = 65;
        
        public const int SQLITE_INDEX_CONSTRAINT_GLOB = 66;
        
        public const int SQLITE_INDEX_CONSTRAINT_REGEXP = 67;
        
        public const int SQLITE_INDEX_CONSTRAINT_NE = 68;
        
        public const int SQLITE_INDEX_CONSTRAINT_ISNOT = 69;
        
        public const int SQLITE_INDEX_CONSTRAINT_ISNOTNULL = 70;
        
        public const int SQLITE_INDEX_CONSTRAINT_ISNULL = 71;
        
        public const int SQLITE_INDEX_CONSTRAINT_IS = 72;
        
        public const int SQLITE_INDEX_CONSTRAINT_LIMIT = 73;
        
        public const int SQLITE_INDEX_CONSTRAINT_OFFSET = 74;
        
        public const int SQLITE_INDEX_CONSTRAINT_FUNCTION = 150;
        
        public const int SQLITE_MUTEX_FAST = 0;
        
        public const int SQLITE_MUTEX_RECURSIVE = 1;
        
        public const int SQLITE_MUTEX_STATIC_MAIN = 2;
        
        /// <summary>
        /// sqlite3_malloc()
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_MEM = 3;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_MEM2 = 4;
        
        /// <summary>
        /// sqlite3BtreeOpen()
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_OPEN = 4;
        
        /// <summary>
        /// sqlite3_randomness()
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_PRNG = 5;
        
        /// <summary>
        /// lru page list
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_LRU = 6;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_LRU2 = 7;
        
        /// <summary>
        /// sqlite3PageMalloc()
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_PMEM = 7;
        
        /// <summary>
        /// For use by application
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_APP1 = 8;
        
        /// <summary>
        /// For use by application
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_APP2 = 9;
        
        /// <summary>
        /// For use by application
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_APP3 = 10;
        
        /// <summary>
        /// For use by built-in VFS
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_VFS1 = 11;
        
        /// <summary>
        /// For use by extension VFS
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_VFS2 = 12;
        
        /// <summary>
        /// For use by application VFS
        /// </summary>
        public const int SQLITE_MUTEX_STATIC_VFS3 = 13;
        
        public const int SQLITE_MUTEX_STATIC_MASTER = 2;
        
        public const int SQLITE_TESTCTRL_FIRST = 5;
        
        public const int SQLITE_TESTCTRL_PRNG_SAVE = 5;
        
        public const int SQLITE_TESTCTRL_PRNG_RESTORE = 6;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_TESTCTRL_PRNG_RESET = 7;
        
        public const int SQLITE_TESTCTRL_FK_NO_ACTION = 7;
        
        public const int SQLITE_TESTCTRL_BITVEC_TEST = 8;
        
        public const int SQLITE_TESTCTRL_FAULT_INSTALL = 9;
        
        public const int SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS = 10;
        
        public const int SQLITE_TESTCTRL_PENDING_BYTE = 11;
        
        public const int SQLITE_TESTCTRL_ASSERT = 12;
        
        public const int SQLITE_TESTCTRL_ALWAYS = 13;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_TESTCTRL_RESERVE = 14;
        
        public const int SQLITE_TESTCTRL_OPTIMIZATIONS = 15;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_TESTCTRL_ISKEYWORD = 16;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_TESTCTRL_SCRATCHMALLOC = 17;
        
        public const int SQLITE_TESTCTRL_INTERNAL_FUNCTIONS = 17;
        
        public const int SQLITE_TESTCTRL_LOCALTIME_FAULT = 18;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_TESTCTRL_EXPLAIN_STMT = 19;
        
        public const int SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD = 19;
        
        public const int SQLITE_TESTCTRL_NEVER_CORRUPT = 20;
        
        public const int SQLITE_TESTCTRL_VDBE_COVERAGE = 21;
        
        public const int SQLITE_TESTCTRL_BYTEORDER = 22;
        
        public const int SQLITE_TESTCTRL_ISINIT = 23;
        
        public const int SQLITE_TESTCTRL_SORTER_MMAP = 24;
        
        public const int SQLITE_TESTCTRL_IMPOSTER = 25;
        
        public const int SQLITE_TESTCTRL_PARSER_COVERAGE = 26;
        
        public const int SQLITE_TESTCTRL_RESULT_INTREAL = 27;
        
        public const int SQLITE_TESTCTRL_PRNG_SEED = 28;
        
        public const int SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS = 29;
        
        public const int SQLITE_TESTCTRL_SEEK_COUNT = 30;
        
        public const int SQLITE_TESTCTRL_TRACEFLAGS = 31;
        
        public const int SQLITE_TESTCTRL_TUNE = 32;
        
        public const int SQLITE_TESTCTRL_LOGEST = 33;
        
        public const int SQLITE_TESTCTRL_USELONGDOUBLE = 34;
        
        /// <summary>
        /// Largest TESTCTRL
        /// </summary>
        public const int SQLITE_TESTCTRL_LAST = 34;
        
        public const int SQLITE_STATUS_MEMORY_USED = 0;
        
        public const int SQLITE_STATUS_PAGECACHE_USED = 1;
        
        public const int SQLITE_STATUS_PAGECACHE_OVERFLOW = 2;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_STATUS_SCRATCH_USED = 3;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_STATUS_SCRATCH_OVERFLOW = 4;
        
        public const int SQLITE_STATUS_MALLOC_SIZE = 5;
        
        public const int SQLITE_STATUS_PARSER_STACK = 6;
        
        public const int SQLITE_STATUS_PAGECACHE_SIZE = 7;
        
        /// <summary>
        /// NOT USED
        /// </summary>
        public const int SQLITE_STATUS_SCRATCH_SIZE = 8;
        
        public const int SQLITE_STATUS_MALLOC_COUNT = 9;
        
        public const int SQLITE_DBSTATUS_LOOKASIDE_USED = 0;
        
        public const int SQLITE_DBSTATUS_CACHE_USED = 1;
        
        public const int SQLITE_DBSTATUS_SCHEMA_USED = 2;
        
        public const int SQLITE_DBSTATUS_STMT_USED = 3;
        
        public const int SQLITE_DBSTATUS_LOOKASIDE_HIT = 4;
        
        public const int SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE = 5;
        
        public const int SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL = 6;
        
        public const int SQLITE_DBSTATUS_CACHE_HIT = 7;
        
        public const int SQLITE_DBSTATUS_CACHE_MISS = 8;
        
        public const int SQLITE_DBSTATUS_CACHE_WRITE = 9;
        
        public const int SQLITE_DBSTATUS_DEFERRED_FKS = 10;
        
        public const int SQLITE_DBSTATUS_CACHE_USED_SHARED = 11;
        
        public const int SQLITE_DBSTATUS_CACHE_SPILL = 12;
        
        /// <summary>
        /// Largest defined DBSTATUS
        /// </summary>
        public const int SQLITE_DBSTATUS_MAX = 12;
        
        public const int SQLITE_STMTSTATUS_FULLSCAN_STEP = 1;
        
        public const int SQLITE_STMTSTATUS_SORT = 2;
        
        public const int SQLITE_STMTSTATUS_AUTOINDEX = 3;
        
        public const int SQLITE_STMTSTATUS_VM_STEP = 4;
        
        public const int SQLITE_STMTSTATUS_REPREPARE = 5;
        
        public const int SQLITE_STMTSTATUS_RUN = 6;
        
        public const int SQLITE_STMTSTATUS_FILTER_MISS = 7;
        
        public const int SQLITE_STMTSTATUS_FILTER_HIT = 8;
        
        public const int SQLITE_STMTSTATUS_MEMUSED = 99;
        
        /// <summary>
        /// Do as much as possible w/o blocking
        /// </summary>
        public const int SQLITE_CHECKPOINT_PASSIVE = 0;
        
        /// <summary>
        /// Wait for writers, then checkpoint
        /// </summary>
        public const int SQLITE_CHECKPOINT_FULL = 1;
        
        /// <summary>
        /// Like FULL but wait for readers
        /// </summary>
        public const int SQLITE_CHECKPOINT_RESTART = 2;
        
        /// <summary>
        /// Like RESTART but also truncate WAL
        /// </summary>
        public const int SQLITE_CHECKPOINT_TRUNCATE = 3;
        
        public const int SQLITE_VTAB_CONSTRAINT_SUPPORT = 1;
        
        public const int SQLITE_VTAB_INNOCUOUS = 2;
        
        public const int SQLITE_VTAB_DIRECTONLY = 3;
        
        public const int SQLITE_VTAB_USES_ALL_SCHEMAS = 4;
        
        public const int SQLITE_ROLLBACK = 1;
        
        public const int SQLITE_FAIL = 3;
        
        public const int SQLITE_REPLACE = 5;
        
        public const int SQLITE_SCANSTAT_NLOOP = 0;
        
        public const int SQLITE_SCANSTAT_NVISIT = 1;
        
        public const int SQLITE_SCANSTAT_EST = 2;
        
        public const int SQLITE_SCANSTAT_NAME = 3;
        
        public const int SQLITE_SCANSTAT_EXPLAIN = 4;
        
        public const int SQLITE_SCANSTAT_SELECTID = 5;
        
        public const int SQLITE_SCANSTAT_PARENTID = 6;
        
        public const int SQLITE_SCANSTAT_NCYCLE = 7;
        
        public const int SQLITE_SCANSTAT_COMPLEX = 0x0001;
        
        /// <summary>
        /// Do no memory allocations
        /// </summary>
        public const int SQLITE_SERIALIZE_NOCOPY = 0x001;
        
        /// <summary>
        /// Call sqlite3_free() on close
        /// </summary>
        public const int SQLITE_DESERIALIZE_FREEONCLOSE = 1;
        
        /// <summary>
        /// Resize using sqlite3_realloc64()
        /// </summary>
        public const int SQLITE_DESERIALIZE_RESIZEABLE = 2;
        
        /// <summary>
        /// Database is read-only
        /// </summary>
        public const int SQLITE_DESERIALIZE_READONLY = 4;
    }
}

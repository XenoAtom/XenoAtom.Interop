// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
using XenoAtom.Interop.CodeGen.common;
using XenoAtom.Interop.CodeGen.libgit2;
using XenoAtom.Interop.CodeGen.musl;
using XenoAtom.Interop.CodeGen.sqlite;
using XenoAtom.Interop.CodeGen.zlib;

namespace XenoAtom.Interop.CodeGen;

partial class Program
{
    /// <summary>
    /// Gets the list of library descriptors generated by the code generator.
    /// </summary>
    private static readonly LibDescriptor[] LibDescriptors =
    [
        new()
        {
            Name = "common",
            Summary = "This package provides the shared types `FixedArray#<T>` to interop between .NET and C/C++.",
            Url = "https://github.com/XenoAtom/Interop",
            Generator = desc => new EmptyGenerator(desc),
            HasGeneratedFolder = false,
        },
        new()
        {
            Name = "musl",
            Summary = "This package provides a low-level and modern .NET P/Invoke wrapper around the musl libc library for accessing low-level sys kernel functions.",
            CppDescription = "musl libc is an implementation of the C standard library providing access to the Linux kernel syscalls.",
            Url = "https://musl.libc.org/",
            Generator = desc => new MuslGenerator(desc),
            ApkDeps = ["musl-dev", "linux-headers"],
            UsageInCSharp =
                """
                Example of using this library in C#:
                
                ```csharp
                using static XenoAtom.Interop.musl;
                
                var ret = mkdir("test_directory", S_IRWXU | S_IRWXG | S_IRWXO);
                if (ret == -1)
                {
                    var lerrno = errno;
                    // ...
                }
                ```
                """
        },
        new()
        {
            Name = "libgit2",
            Summary = "This package provides a low-level and modern .NET P/Invoke wrapper around the libgit2 library.",
            CppDescription = "libgit2 is a pure C implementation of the git core methods.",
            Url = "https://libgit2.org/",
            NativeNuGets = [new("LibGit2Sharp.NativeBinaries", "2.0.322")],
            Generator = desc => new LibGit2Generator(desc),
            ApkDeps = ["libgit2-dev"],
        },
        new()
        {
            Name = "sqlite",
            Summary = "This package provides a low-level and modern .NET P/Invoke wrapper around the SQLite database engine.",
            CppDescription = "SQLite is a small and fast SQL database engine.",
            Url = "https://www.sqlite.org/",
            NativeNuGets = [new("SQLitePCLRaw.lib.e_sqlite3", "2.1.8")],
            Generator = desc => new SqliteGenerator(desc),
            ApkDeps = ["sqlite-dev"],
        },
        new()
        {
            Name = "zlib",
            Summary = "This package provides a low-level and modern .NET P/Invoke wrapper around the zlib compression library.",
            CppDescription = "zlib compression library.",
            Url = "https://zlib.net/",
            NativeNuGets =
            [
                new("elskom.zlib.redist.win", "1.2.13"),
                new("elskom.zlib.redist.linux", "1.2.13"),
                new("elskom.zlib.redist.osx", "1.2.13")
            ],
            Generator = desc => new ZlibGenerator(desc),
            ApkDeps = ["zlib-dev"],
        },
    ];
}
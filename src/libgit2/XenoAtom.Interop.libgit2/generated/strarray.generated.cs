//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XenoAtom.Interop
{
    using System.Runtime.InteropServices;
    
    using System.Runtime.CompilerServices;
    
    public static unsafe partial class libgit2
    {
        /// <summary>
        /// Array of strings
        /// </summary>
        public partial struct git_strarray
        {
            public byte** strings;
            
            public libgit2.size_t count;
        }
        
        /// <summary>
        /// Free the strings contained in a string array.  This method should
        /// be called on `git_strarray` objects that were provided by the
        /// library.  Not doing so, will result in a memory leak.
        /// </summary>
        /// <param name="array">The git_strarray that contains strings to free</param>
        /// <remarks>
        /// This does not free the `git_strarray` itself, since the library will
        /// never allocate that object directly itself.
        /// </remarks>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "git_strarray_dispose")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial void git_strarray_dispose(ref libgit2.git_strarray array);
    }
}

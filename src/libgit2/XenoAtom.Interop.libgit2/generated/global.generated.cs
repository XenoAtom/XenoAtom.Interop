//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XenoAtom.Interop
{
    using System.Runtime.InteropServices;
    
    using System.Runtime.CompilerServices;
    
    public static unsafe partial class libgit2
    {
        /// <summary>
        /// Init the global state
        /// </summary>
        /// <returns>@return the number of initializations of the library, or an error code.</returns>
        /// <remarks>
        /// This function must be called before any other libgit2 function in
        /// order to set up global state and threading.This function may be called multiple times - it will return the number
        /// of times the initialization has been called (including this one) that have
        /// not subsequently been shutdown.
        /// </remarks>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "git_libgit2_init")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int git_libgit2_init();
        
        /// <summary>
        /// Shutdown the global state
        /// </summary>
        /// <returns>@return the number of remaining initializations of the library, or an
        /// error code.</returns>
        /// <remarks>
        /// Clean up the global state and threading context after calling it as
        /// many times as `git_libgit2_init()` was called - it will return the
        /// number of remainining initializations that have not been shutdown
        /// (after this one).
        /// </remarks>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "git_libgit2_shutdown")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int git_libgit2_shutdown();
    }
}

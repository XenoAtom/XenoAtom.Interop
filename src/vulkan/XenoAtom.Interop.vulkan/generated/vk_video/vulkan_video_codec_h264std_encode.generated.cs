//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XenoAtom.Interop
{
    public static unsafe partial class vulkan
    {
        public partial struct StdVideoEncodeH264WeightTableFlags
        {
            public uint luma_weight_l0_flag;
            
            public uint chroma_weight_l0_flag;
            
            public uint luma_weight_l1_flag;
            
            public uint chroma_weight_l1_flag;
        }
        
        public unsafe partial struct StdVideoEncodeH264WeightTable
        {
            public vulkan.StdVideoEncodeH264WeightTableFlags flags;
            
            public byte luma_log2_weight_denom;
            
            public byte chroma_log2_weight_denom;
            
            public fixed byte luma_weight_l0[32];
            
            public fixed byte luma_offset_l0[32];
            
            public FixedArray32<FixedArray2<sbyte>> chroma_weight_l0;
            
            public FixedArray32<FixedArray2<sbyte>> chroma_offset_l0;
            
            public fixed byte luma_weight_l1[32];
            
            public fixed byte luma_offset_l1[32];
            
            public FixedArray32<FixedArray2<sbyte>> chroma_weight_l1;
            
            public FixedArray32<FixedArray2<sbyte>> chroma_offset_l1;
        }
        
        public partial struct StdVideoEncodeH264SliceHeaderFlags
        {
            private uint __bitfield__0;
            
            public uint direct_spatial_mv_pred_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint num_ref_idx_active_override_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000011)) | ((((uint)value) & (unchecked((uint)0b111111111111111111111111111111)) << 2));
                }
            }
        }
        
        public partial struct StdVideoEncodeH264PictureInfoFlags
        {
            private uint __bitfield__0;
            
            public uint IdrPicFlag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint is_reference
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint no_output_of_prior_pics_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111011)) | ((((uint)value) & (unchecked((uint)0b1)) << 2));
                }
            }
            
            public uint long_term_reference_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 3) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111110111)) | ((((uint)value) & (unchecked((uint)0b1)) << 3));
                }
            }
            
            public uint adaptive_ref_pic_marking_mode_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 4) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111101111)) | ((((uint)value) & (unchecked((uint)0b1)) << 4));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 5) & 0b111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000011111)) | ((((uint)value) & (unchecked((uint)0b111111111111111111111111111)) << 5));
                }
            }
        }
        
        public partial struct StdVideoEncodeH264ReferenceInfoFlags
        {
            private uint __bitfield__0;
            
            public uint used_for_long_term_reference
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000001)) | ((((uint)value) & (unchecked((uint)0b1111111111111111111111111111111)) << 1));
                }
            }
        }
        
        public partial struct StdVideoEncodeH264ReferenceListsInfoFlags
        {
            private uint __bitfield__0;
            
            public uint ref_pic_list_modification_flag_l0
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint ref_pic_list_modification_flag_l1
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000011)) | ((((uint)value) & (unchecked((uint)0b111111111111111111111111111111)) << 2));
                }
            }
        }
        
        public partial struct StdVideoEncodeH264RefListModEntry
        {
            public vulkan.StdVideoH264ModificationOfPicNumsIdc modification_of_pic_nums_idc;
            
            public ushort abs_diff_pic_num_minus1;
            
            public ushort long_term_pic_num;
        }
        
        public partial struct StdVideoEncodeH264RefPicMarkingEntry
        {
            public vulkan.StdVideoH264MemMgmtControlOp memory_management_control_operation;
            
            public ushort difference_of_pic_nums_minus1;
            
            public ushort long_term_pic_num;
            
            public ushort long_term_frame_idx;
            
            public ushort max_long_term_frame_idx_plus1;
        }
        
        public unsafe partial struct StdVideoEncodeH264ReferenceListsInfo
        {
            public vulkan.StdVideoEncodeH264ReferenceListsInfoFlags flags;
            
            public byte num_ref_idx_l0_active_minus1;
            
            public byte num_ref_idx_l1_active_minus1;
            
            public fixed byte RefPicList0[32];
            
            public fixed byte RefPicList1[32];
            
            public byte refList0ModOpCount;
            
            public byte refList1ModOpCount;
            
            public byte refPicMarkingOpCount;
            
            public fixed byte reserved1[7];
            
            public vulkan.StdVideoEncodeH264RefListModEntry* pRefList0ModOperations;
            
            public vulkan.StdVideoEncodeH264RefListModEntry* pRefList1ModOperations;
            
            public vulkan.StdVideoEncodeH264RefPicMarkingEntry* pRefPicMarkingOperations;
        }
        
        public unsafe partial struct StdVideoEncodeH264PictureInfo
        {
            public vulkan.StdVideoEncodeH264PictureInfoFlags flags;
            
            public byte seq_parameter_set_id;
            
            public byte pic_parameter_set_id;
            
            public ushort idr_pic_id;
            
            public vulkan.StdVideoH264PictureType primary_pic_type;
            
            public uint frame_num;
            
            public int PicOrderCnt;
            
            public byte temporal_id;
            
            public fixed byte reserved1[3];
            
            public vulkan.StdVideoEncodeH264ReferenceListsInfo* pRefLists;
        }
        
        public partial struct StdVideoEncodeH264ReferenceInfo
        {
            public vulkan.StdVideoEncodeH264ReferenceInfoFlags flags;
            
            public vulkan.StdVideoH264PictureType primary_pic_type;
            
            public uint FrameNum;
            
            public int PicOrderCnt;
            
            public ushort long_term_pic_num;
            
            public ushort long_term_frame_idx;
            
            public byte temporal_id;
        }
        
        public partial struct StdVideoEncodeH264SliceHeader
        {
            public vulkan.StdVideoEncodeH264SliceHeaderFlags flags;
            
            public uint first_mb_in_slice;
            
            public vulkan.StdVideoH264SliceType slice_type;
            
            public sbyte slice_alpha_c0_offset_div2;
            
            public sbyte slice_beta_offset_div2;
            
            public sbyte slice_qp_delta;
            
            public byte reserved1;
            
            public vulkan.StdVideoH264CabacInitIdc cabac_init_idc;
            
            public vulkan.StdVideoH264DisableDeblockingFilterIdc disable_deblocking_filter_idc;
            
            public vulkan.StdVideoEncodeH264WeightTable* pWeightTable;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
namespace XenoAtom.Interop
{
    public static unsafe partial class vulkan
    {
        public enum StdVideoAV1Profile : uint
        {
            STD_VIDEO_AV1_PROFILE_MAIN = unchecked((uint)0),
            
            STD_VIDEO_AV1_PROFILE_HIGH = unchecked((uint)1),
            
            STD_VIDEO_AV1_PROFILE_PROFESSIONAL = unchecked((uint)2),
            
            STD_VIDEO_AV1_PROFILE_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_PROFILE_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1Profile STD_VIDEO_AV1_PROFILE_MAIN = StdVideoAV1Profile.STD_VIDEO_AV1_PROFILE_MAIN;
        
        public const vulkan.StdVideoAV1Profile STD_VIDEO_AV1_PROFILE_HIGH = StdVideoAV1Profile.STD_VIDEO_AV1_PROFILE_HIGH;
        
        public const vulkan.StdVideoAV1Profile STD_VIDEO_AV1_PROFILE_PROFESSIONAL = StdVideoAV1Profile.STD_VIDEO_AV1_PROFILE_PROFESSIONAL;
        
        public const vulkan.StdVideoAV1Profile STD_VIDEO_AV1_PROFILE_INVALID = StdVideoAV1Profile.STD_VIDEO_AV1_PROFILE_INVALID;
        
        public const vulkan.StdVideoAV1Profile STD_VIDEO_AV1_PROFILE_MAX_ENUM = StdVideoAV1Profile.STD_VIDEO_AV1_PROFILE_MAX_ENUM;
        
        public enum StdVideoAV1Level : uint
        {
            STD_VIDEO_AV1_LEVEL_2_0 = unchecked((uint)0),
            
            STD_VIDEO_AV1_LEVEL_2_1 = unchecked((uint)1),
            
            STD_VIDEO_AV1_LEVEL_2_2 = unchecked((uint)2),
            
            STD_VIDEO_AV1_LEVEL_2_3 = unchecked((uint)3),
            
            STD_VIDEO_AV1_LEVEL_3_0 = unchecked((uint)4),
            
            STD_VIDEO_AV1_LEVEL_3_1 = unchecked((uint)5),
            
            STD_VIDEO_AV1_LEVEL_3_2 = unchecked((uint)6),
            
            STD_VIDEO_AV1_LEVEL_3_3 = unchecked((uint)7),
            
            STD_VIDEO_AV1_LEVEL_4_0 = unchecked((uint)8),
            
            STD_VIDEO_AV1_LEVEL_4_1 = unchecked((uint)9),
            
            STD_VIDEO_AV1_LEVEL_4_2 = unchecked((uint)10),
            
            STD_VIDEO_AV1_LEVEL_4_3 = unchecked((uint)11),
            
            STD_VIDEO_AV1_LEVEL_5_0 = unchecked((uint)12),
            
            STD_VIDEO_AV1_LEVEL_5_1 = unchecked((uint)13),
            
            STD_VIDEO_AV1_LEVEL_5_2 = unchecked((uint)14),
            
            STD_VIDEO_AV1_LEVEL_5_3 = unchecked((uint)15),
            
            STD_VIDEO_AV1_LEVEL_6_0 = unchecked((uint)16),
            
            STD_VIDEO_AV1_LEVEL_6_1 = unchecked((uint)17),
            
            STD_VIDEO_AV1_LEVEL_6_2 = unchecked((uint)18),
            
            STD_VIDEO_AV1_LEVEL_6_3 = unchecked((uint)19),
            
            STD_VIDEO_AV1_LEVEL_7_0 = unchecked((uint)20),
            
            STD_VIDEO_AV1_LEVEL_7_1 = unchecked((uint)21),
            
            STD_VIDEO_AV1_LEVEL_7_2 = unchecked((uint)22),
            
            STD_VIDEO_AV1_LEVEL_7_3 = unchecked((uint)23),
            
            STD_VIDEO_AV1_LEVEL_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_LEVEL_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_2_0 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_2_0;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_2_1 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_2_1;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_2_2 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_2_2;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_2_3 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_2_3;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_3_0 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_3_0;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_3_1 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_3_1;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_3_2 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_3_2;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_3_3 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_3_3;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_4_0 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_4_0;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_4_1 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_4_1;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_4_2 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_4_2;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_4_3 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_4_3;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_5_0 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_5_0;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_5_1 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_5_1;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_5_2 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_5_2;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_5_3 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_5_3;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_6_0 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_6_0;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_6_1 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_6_1;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_6_2 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_6_2;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_6_3 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_6_3;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_7_0 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_7_0;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_7_1 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_7_1;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_7_2 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_7_2;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_7_3 = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_7_3;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_INVALID = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_INVALID;
        
        public const vulkan.StdVideoAV1Level STD_VIDEO_AV1_LEVEL_MAX_ENUM = StdVideoAV1Level.STD_VIDEO_AV1_LEVEL_MAX_ENUM;
        
        public enum StdVideoAV1FrameType : uint
        {
            STD_VIDEO_AV1_FRAME_TYPE_KEY = unchecked((uint)0),
            
            STD_VIDEO_AV1_FRAME_TYPE_INTER = unchecked((uint)1),
            
            STD_VIDEO_AV1_FRAME_TYPE_INTRA_ONLY = unchecked((uint)2),
            
            STD_VIDEO_AV1_FRAME_TYPE_SWITCH = unchecked((uint)3),
            
            STD_VIDEO_AV1_FRAME_TYPE_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_FRAME_TYPE_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1FrameType STD_VIDEO_AV1_FRAME_TYPE_KEY = StdVideoAV1FrameType.STD_VIDEO_AV1_FRAME_TYPE_KEY;
        
        public const vulkan.StdVideoAV1FrameType STD_VIDEO_AV1_FRAME_TYPE_INTER = StdVideoAV1FrameType.STD_VIDEO_AV1_FRAME_TYPE_INTER;
        
        public const vulkan.StdVideoAV1FrameType STD_VIDEO_AV1_FRAME_TYPE_INTRA_ONLY = StdVideoAV1FrameType.STD_VIDEO_AV1_FRAME_TYPE_INTRA_ONLY;
        
        public const vulkan.StdVideoAV1FrameType STD_VIDEO_AV1_FRAME_TYPE_SWITCH = StdVideoAV1FrameType.STD_VIDEO_AV1_FRAME_TYPE_SWITCH;
        
        public const vulkan.StdVideoAV1FrameType STD_VIDEO_AV1_FRAME_TYPE_INVALID = StdVideoAV1FrameType.STD_VIDEO_AV1_FRAME_TYPE_INVALID;
        
        public const vulkan.StdVideoAV1FrameType STD_VIDEO_AV1_FRAME_TYPE_MAX_ENUM = StdVideoAV1FrameType.STD_VIDEO_AV1_FRAME_TYPE_MAX_ENUM;
        
        public enum StdVideoAV1ReferenceName : uint
        {
            STD_VIDEO_AV1_REFERENCE_NAME_INTRA_FRAME = unchecked((uint)0),
            
            STD_VIDEO_AV1_REFERENCE_NAME_LAST_FRAME = unchecked((uint)1),
            
            STD_VIDEO_AV1_REFERENCE_NAME_LAST2_FRAME = unchecked((uint)2),
            
            STD_VIDEO_AV1_REFERENCE_NAME_LAST3_FRAME = unchecked((uint)3),
            
            STD_VIDEO_AV1_REFERENCE_NAME_GOLDEN_FRAME = unchecked((uint)4),
            
            STD_VIDEO_AV1_REFERENCE_NAME_BWDREF_FRAME = unchecked((uint)5),
            
            STD_VIDEO_AV1_REFERENCE_NAME_ALTREF2_FRAME = unchecked((uint)6),
            
            STD_VIDEO_AV1_REFERENCE_NAME_ALTREF_FRAME = unchecked((uint)7),
            
            STD_VIDEO_AV1_REFERENCE_NAME_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_REFERENCE_NAME_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_INTRA_FRAME = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_INTRA_FRAME;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_LAST_FRAME = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_LAST_FRAME;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_LAST2_FRAME = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_LAST2_FRAME;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_LAST3_FRAME = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_LAST3_FRAME;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_GOLDEN_FRAME = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_GOLDEN_FRAME;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_BWDREF_FRAME = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_BWDREF_FRAME;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_ALTREF2_FRAME = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_ALTREF2_FRAME;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_ALTREF_FRAME = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_ALTREF_FRAME;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_INVALID = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_INVALID;
        
        public const vulkan.StdVideoAV1ReferenceName STD_VIDEO_AV1_REFERENCE_NAME_MAX_ENUM = StdVideoAV1ReferenceName.STD_VIDEO_AV1_REFERENCE_NAME_MAX_ENUM;
        
        public enum StdVideoAV1InterpolationFilter : uint
        {
            STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP = unchecked((uint)0),
            
            STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP_SMOOTH = unchecked((uint)1),
            
            STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP_SHARP = unchecked((uint)2),
            
            STD_VIDEO_AV1_INTERPOLATION_FILTER_BILINEAR = unchecked((uint)3),
            
            STD_VIDEO_AV1_INTERPOLATION_FILTER_SWITCHABLE = unchecked((uint)4),
            
            STD_VIDEO_AV1_INTERPOLATION_FILTER_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_INTERPOLATION_FILTER_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1InterpolationFilter STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP = StdVideoAV1InterpolationFilter.STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP;
        
        public const vulkan.StdVideoAV1InterpolationFilter STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP_SMOOTH = StdVideoAV1InterpolationFilter.STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP_SMOOTH;
        
        public const vulkan.StdVideoAV1InterpolationFilter STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP_SHARP = StdVideoAV1InterpolationFilter.STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP_SHARP;
        
        public const vulkan.StdVideoAV1InterpolationFilter STD_VIDEO_AV1_INTERPOLATION_FILTER_BILINEAR = StdVideoAV1InterpolationFilter.STD_VIDEO_AV1_INTERPOLATION_FILTER_BILINEAR;
        
        public const vulkan.StdVideoAV1InterpolationFilter STD_VIDEO_AV1_INTERPOLATION_FILTER_SWITCHABLE = StdVideoAV1InterpolationFilter.STD_VIDEO_AV1_INTERPOLATION_FILTER_SWITCHABLE;
        
        public const vulkan.StdVideoAV1InterpolationFilter STD_VIDEO_AV1_INTERPOLATION_FILTER_INVALID = StdVideoAV1InterpolationFilter.STD_VIDEO_AV1_INTERPOLATION_FILTER_INVALID;
        
        public const vulkan.StdVideoAV1InterpolationFilter STD_VIDEO_AV1_INTERPOLATION_FILTER_MAX_ENUM = StdVideoAV1InterpolationFilter.STD_VIDEO_AV1_INTERPOLATION_FILTER_MAX_ENUM;
        
        public enum StdVideoAV1TxMode : uint
        {
            STD_VIDEO_AV1_TX_MODE_ONLY_4X4 = unchecked((uint)0),
            
            STD_VIDEO_AV1_TX_MODE_LARGEST = unchecked((uint)1),
            
            STD_VIDEO_AV1_TX_MODE_SELECT = unchecked((uint)2),
            
            STD_VIDEO_AV1_TX_MODE_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_TX_MODE_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1TxMode STD_VIDEO_AV1_TX_MODE_ONLY_4X4 = StdVideoAV1TxMode.STD_VIDEO_AV1_TX_MODE_ONLY_4X4;
        
        public const vulkan.StdVideoAV1TxMode STD_VIDEO_AV1_TX_MODE_LARGEST = StdVideoAV1TxMode.STD_VIDEO_AV1_TX_MODE_LARGEST;
        
        public const vulkan.StdVideoAV1TxMode STD_VIDEO_AV1_TX_MODE_SELECT = StdVideoAV1TxMode.STD_VIDEO_AV1_TX_MODE_SELECT;
        
        public const vulkan.StdVideoAV1TxMode STD_VIDEO_AV1_TX_MODE_INVALID = StdVideoAV1TxMode.STD_VIDEO_AV1_TX_MODE_INVALID;
        
        public const vulkan.StdVideoAV1TxMode STD_VIDEO_AV1_TX_MODE_MAX_ENUM = StdVideoAV1TxMode.STD_VIDEO_AV1_TX_MODE_MAX_ENUM;
        
        public enum StdVideoAV1FrameRestorationType : uint
        {
            STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_NONE = unchecked((uint)0),
            
            STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_WIENER = unchecked((uint)1),
            
            STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_SGRPROJ = unchecked((uint)2),
            
            STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_SWITCHABLE = unchecked((uint)3),
            
            STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1FrameRestorationType STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_NONE = StdVideoAV1FrameRestorationType.STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_NONE;
        
        public const vulkan.StdVideoAV1FrameRestorationType STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_WIENER = StdVideoAV1FrameRestorationType.STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_WIENER;
        
        public const vulkan.StdVideoAV1FrameRestorationType STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_SGRPROJ = StdVideoAV1FrameRestorationType.STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_SGRPROJ;
        
        public const vulkan.StdVideoAV1FrameRestorationType STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_SWITCHABLE = StdVideoAV1FrameRestorationType.STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_SWITCHABLE;
        
        public const vulkan.StdVideoAV1FrameRestorationType STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_INVALID = StdVideoAV1FrameRestorationType.STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_INVALID;
        
        public const vulkan.StdVideoAV1FrameRestorationType STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_MAX_ENUM = StdVideoAV1FrameRestorationType.STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_MAX_ENUM;
        
        public enum StdVideoAV1ColorPrimaries : uint
        {
            STD_VIDEO_AV1_COLOR_PRIMARIES_BT_709 = unchecked((uint)1),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_BT_UNSPECIFIED = unchecked((uint)2),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_BT_470_M = unchecked((uint)4),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_BT_470_B_G = unchecked((uint)5),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_BT_601 = unchecked((uint)6),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_240 = unchecked((uint)7),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_GENERIC_FILM = unchecked((uint)8),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_BT_2020 = unchecked((uint)9),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_XYZ = unchecked((uint)10),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_431 = unchecked((uint)11),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_432 = unchecked((uint)12),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_EBU_3213 = unchecked((uint)22),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_COLOR_PRIMARIES_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_BT_709 = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_BT_709;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_BT_UNSPECIFIED = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_BT_UNSPECIFIED;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_BT_470_M = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_BT_470_M;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_BT_470_B_G = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_BT_470_B_G;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_BT_601 = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_BT_601;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_240 = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_240;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_GENERIC_FILM = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_GENERIC_FILM;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_BT_2020 = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_BT_2020;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_XYZ = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_XYZ;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_431 = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_431;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_432 = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_432;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_EBU_3213 = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_EBU_3213;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_INVALID = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_INVALID;
        
        public const vulkan.StdVideoAV1ColorPrimaries STD_VIDEO_AV1_COLOR_PRIMARIES_MAX_ENUM = StdVideoAV1ColorPrimaries.STD_VIDEO_AV1_COLOR_PRIMARIES_MAX_ENUM;
        
        public enum StdVideoAV1TransferCharacteristics : uint
        {
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_RESERVED_0 = unchecked((uint)0),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_709 = unchecked((uint)1),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_UNSPECIFIED = unchecked((uint)2),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_RESERVED_3 = unchecked((uint)3),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_470_M = unchecked((uint)4),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_470_B_G = unchecked((uint)5),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_601 = unchecked((uint)6),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_240 = unchecked((uint)7),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LINEAR = unchecked((uint)8),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LOG_100 = unchecked((uint)9),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LOG_100_SQRT10 = unchecked((uint)10),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_IEC_61966 = unchecked((uint)11),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_1361 = unchecked((uint)12),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SRGB = unchecked((uint)13),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_2020_10_BIT = unchecked((uint)14),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_2020_12_BIT = unchecked((uint)15),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_2084 = unchecked((uint)16),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_428 = unchecked((uint)17),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_HLG = unchecked((uint)18),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_RESERVED_0 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_RESERVED_0;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_709 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_709;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_UNSPECIFIED = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_UNSPECIFIED;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_RESERVED_3 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_RESERVED_3;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_470_M = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_470_M;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_470_B_G = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_470_B_G;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_601 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_601;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_240 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_240;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LINEAR = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LINEAR;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LOG_100 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LOG_100;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LOG_100_SQRT10 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LOG_100_SQRT10;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_IEC_61966 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_IEC_61966;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_1361 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_1361;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SRGB = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SRGB;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_2020_10_BIT = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_2020_10_BIT;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_2020_12_BIT = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_2020_12_BIT;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_2084 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_2084;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_428 = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_428;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_HLG = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_HLG;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_INVALID = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_INVALID;
        
        public const vulkan.StdVideoAV1TransferCharacteristics STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_MAX_ENUM = StdVideoAV1TransferCharacteristics.STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_MAX_ENUM;
        
        public enum StdVideoAV1MatrixCoefficients : uint
        {
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_IDENTITY = unchecked((uint)0),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_709 = unchecked((uint)1),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_UNSPECIFIED = unchecked((uint)2),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_RESERVED_3 = unchecked((uint)3),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_FCC = unchecked((uint)4),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_470_B_G = unchecked((uint)5),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_601 = unchecked((uint)6),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_240 = unchecked((uint)7),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_YCGCO = unchecked((uint)8),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_2020_NCL = unchecked((uint)9),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_2020_CL = unchecked((uint)10),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_2085 = unchecked((uint)11),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_CHROMAT_NCL = unchecked((uint)12),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_CHROMAT_CL = unchecked((uint)13),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_ICTCP = unchecked((uint)14),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_MATRIX_COEFFICIENTS_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_IDENTITY = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_IDENTITY;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_709 = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_709;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_UNSPECIFIED = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_UNSPECIFIED;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_RESERVED_3 = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_RESERVED_3;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_FCC = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_FCC;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_470_B_G = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_470_B_G;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_601 = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_601;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_240 = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_240;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_YCGCO = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_YCGCO;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_2020_NCL = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_2020_NCL;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_2020_CL = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_2020_CL;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_2085 = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_2085;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_CHROMAT_NCL = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_CHROMAT_NCL;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_CHROMAT_CL = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_CHROMAT_CL;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_ICTCP = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_ICTCP;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_INVALID = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_INVALID;
        
        public const vulkan.StdVideoAV1MatrixCoefficients STD_VIDEO_AV1_MATRIX_COEFFICIENTS_MAX_ENUM = StdVideoAV1MatrixCoefficients.STD_VIDEO_AV1_MATRIX_COEFFICIENTS_MAX_ENUM;
        
        public enum StdVideoAV1ChromaSamplePosition : uint
        {
            STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_UNKNOWN = unchecked((uint)0),
            
            STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_VERTICAL = unchecked((uint)1),
            
            STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_COLOCATED = unchecked((uint)2),
            
            STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_RESERVED = unchecked((uint)3),
            
            STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_INVALID = unchecked((uint)2147483647),
            
            STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_MAX_ENUM = unchecked((uint)2147483647),
        }
        
        public const vulkan.StdVideoAV1ChromaSamplePosition STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_UNKNOWN = StdVideoAV1ChromaSamplePosition.STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_UNKNOWN;
        
        public const vulkan.StdVideoAV1ChromaSamplePosition STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_VERTICAL = StdVideoAV1ChromaSamplePosition.STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_VERTICAL;
        
        public const vulkan.StdVideoAV1ChromaSamplePosition STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_COLOCATED = StdVideoAV1ChromaSamplePosition.STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_COLOCATED;
        
        public const vulkan.StdVideoAV1ChromaSamplePosition STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_RESERVED = StdVideoAV1ChromaSamplePosition.STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_RESERVED;
        
        public const vulkan.StdVideoAV1ChromaSamplePosition STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_INVALID = StdVideoAV1ChromaSamplePosition.STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_INVALID;
        
        public const vulkan.StdVideoAV1ChromaSamplePosition STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_MAX_ENUM = StdVideoAV1ChromaSamplePosition.STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_MAX_ENUM;
        
        public partial struct StdVideoAV1ColorConfigFlags
        {
            private uint __bitfield__0;
            
            public uint mono_chrome
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint color_range
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint separate_uv_delta_q
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111011)) | ((((uint)value) & (unchecked((uint)0b1)) << 2));
                }
            }
            
            public uint color_description_present_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 3) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111110111)) | ((((uint)value) & (unchecked((uint)0b1)) << 3));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 4) & 0b1111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000001111)) | ((((uint)value) & (unchecked((uint)0b1111111111111111111111111111)) << 4));
                }
            }
        }
        
        public partial struct StdVideoAV1ColorConfig
        {
            public vulkan.StdVideoAV1ColorConfigFlags flags;
            
            public byte BitDepth;
            
            public byte subsampling_x;
            
            public byte subsampling_y;
            
            public byte reserved1;
            
            public vulkan.StdVideoAV1ColorPrimaries color_primaries;
            
            public vulkan.StdVideoAV1TransferCharacteristics transfer_characteristics;
            
            public vulkan.StdVideoAV1MatrixCoefficients matrix_coefficients;
            
            public vulkan.StdVideoAV1ChromaSamplePosition chroma_sample_position;
        }
        
        public partial struct StdVideoAV1TimingInfoFlags
        {
            private uint __bitfield__0;
            
            public uint equal_picture_interval
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000001)) | ((((uint)value) & (unchecked((uint)0b1111111111111111111111111111111)) << 1));
                }
            }
        }
        
        public partial struct StdVideoAV1TimingInfo
        {
            public vulkan.StdVideoAV1TimingInfoFlags flags;
            
            public uint num_units_in_display_tick;
            
            public uint time_scale;
            
            public uint num_ticks_per_picture_minus_1;
        }
        
        public partial struct StdVideoAV1LoopFilterFlags
        {
            private uint __bitfield__0;
            
            public uint loop_filter_delta_enabled
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint loop_filter_delta_update
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000011)) | ((((uint)value) & (unchecked((uint)0b111111111111111111111111111111)) << 2));
                }
            }
        }
        
        public unsafe partial struct StdVideoAV1LoopFilter
        {
            public vulkan.StdVideoAV1LoopFilterFlags flags;
            
            public fixed byte loop_filter_level[4];
            
            public byte loop_filter_sharpness;
            
            public byte update_ref_delta;
            
            public fixed byte loop_filter_ref_deltas[8];
            
            public byte update_mode_delta;
            
            public fixed byte loop_filter_mode_deltas[2];
        }
        
        public partial struct StdVideoAV1QuantizationFlags
        {
            private uint __bitfield__0;
            
            public uint using_qmatrix
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint diff_uv_delta
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000011)) | ((((uint)value) & (unchecked((uint)0b111111111111111111111111111111)) << 2));
                }
            }
        }
        
        public partial struct StdVideoAV1Quantization
        {
            public vulkan.StdVideoAV1QuantizationFlags flags;
            
            public byte base_q_idx;
            
            public sbyte DeltaQYDc;
            
            public sbyte DeltaQUDc;
            
            public sbyte DeltaQUAc;
            
            public sbyte DeltaQVDc;
            
            public sbyte DeltaQVAc;
            
            public byte qm_y;
            
            public byte qm_u;
            
            public byte qm_v;
        }
        
        public unsafe partial struct StdVideoAV1Segmentation
        {
            public fixed byte FeatureEnabled[8];
            
            public FixedArray8<FixedArray8<short>> FeatureData;
        }
        
        public partial struct StdVideoAV1TileInfoFlags
        {
            private uint __bitfield__0;
            
            public uint uniform_tile_spacing_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000001)) | ((((uint)value) & (unchecked((uint)0b1111111111111111111111111111111)) << 1));
                }
            }
        }
        
        public unsafe partial struct StdVideoAV1TileInfo
        {
            public vulkan.StdVideoAV1TileInfoFlags flags;
            
            public byte TileCols;
            
            public byte TileRows;
            
            public ushort context_update_tile_id;
            
            public byte tile_size_bytes_minus_1;
            
            public fixed byte reserved1[7];
            
            public ushort* pMiColStarts;
            
            public ushort* pMiRowStarts;
            
            public ushort* pWidthInSbsMinus1;
            
            public ushort* pHeightInSbsMinus1;
        }
        
        public unsafe partial struct StdVideoAV1CDEF
        {
            public byte cdef_damping_minus_3;
            
            public byte cdef_bits;
            
            public fixed byte cdef_y_pri_strength[8];
            
            public fixed byte cdef_y_sec_strength[8];
            
            public fixed byte cdef_uv_pri_strength[8];
            
            public fixed byte cdef_uv_sec_strength[8];
        }
        
        public unsafe partial struct StdVideoAV1LoopRestoration
        {
            public fixed uint FrameRestorationType[3];
            
            public fixed ushort LoopRestorationSize[3];
        }
        
        public unsafe partial struct StdVideoAV1GlobalMotion
        {
            public fixed byte GmType[8];
            
            public FixedArray8<FixedArray6<int>> gm_params;
        }
        
        public partial struct StdVideoAV1FilmGrainFlags
        {
            private uint __bitfield__0;
            
            public uint chroma_scaling_from_luma
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint overlap_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint clip_to_restricted_range
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111011)) | ((((uint)value) & (unchecked((uint)0b1)) << 2));
                }
            }
            
            public uint update_grain
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 3) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111110111)) | ((((uint)value) & (unchecked((uint)0b1)) << 3));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 4) & 0b1111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000001111)) | ((((uint)value) & (unchecked((uint)0b1111111111111111111111111111)) << 4));
                }
            }
        }
        
        public unsafe partial struct StdVideoAV1FilmGrain
        {
            public vulkan.StdVideoAV1FilmGrainFlags flags;
            
            public byte grain_scaling_minus_8;
            
            public byte ar_coeff_lag;
            
            public byte ar_coeff_shift_minus_6;
            
            public byte grain_scale_shift;
            
            public ushort grain_seed;
            
            public byte film_grain_params_ref_idx;
            
            public byte num_y_points;
            
            public fixed byte point_y_value[14];
            
            public fixed byte point_y_scaling[14];
            
            public byte num_cb_points;
            
            public fixed byte point_cb_value[10];
            
            public fixed byte point_cb_scaling[10];
            
            public byte num_cr_points;
            
            public fixed byte point_cr_value[10];
            
            public fixed byte point_cr_scaling[10];
            
            public fixed byte ar_coeffs_y_plus_128[24];
            
            public fixed byte ar_coeffs_cb_plus_128[25];
            
            public fixed byte ar_coeffs_cr_plus_128[25];
            
            public byte cb_mult;
            
            public byte cb_luma_mult;
            
            public ushort cb_offset;
            
            public byte cr_mult;
            
            public byte cr_luma_mult;
            
            public ushort cr_offset;
        }
        
        public partial struct StdVideoAV1SequenceHeaderFlags
        {
            private uint __bitfield__0;
            
            public uint still_picture
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint reduced_still_picture_header
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint use_128x128_superblock
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111011)) | ((((uint)value) & (unchecked((uint)0b1)) << 2));
                }
            }
            
            public uint enable_filter_intra
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 3) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111110111)) | ((((uint)value) & (unchecked((uint)0b1)) << 3));
                }
            }
            
            public uint enable_intra_edge_filter
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 4) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111101111)) | ((((uint)value) & (unchecked((uint)0b1)) << 4));
                }
            }
            
            public uint enable_interintra_compound
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 5) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111011111)) | ((((uint)value) & (unchecked((uint)0b1)) << 5));
                }
            }
            
            public uint enable_masked_compound
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 6) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111110111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 6));
                }
            }
            
            public uint enable_warped_motion
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 7) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111101111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 7));
                }
            }
            
            public uint enable_dual_filter
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 8) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111011111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 8));
                }
            }
            
            public uint enable_order_hint
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 9) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111110111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 9));
                }
            }
            
            public uint enable_jnt_comp
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 10) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111101111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 10));
                }
            }
            
            public uint enable_ref_frame_mvs
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 11) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111011111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 11));
                }
            }
            
            public uint frame_id_numbers_present_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 12) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111110111111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 12));
                }
            }
            
            public uint enable_superres
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 13) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111101111111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 13));
                }
            }
            
            public uint enable_cdef
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 14) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111011111111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 14));
                }
            }
            
            public uint enable_restoration
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 15) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111110111111111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 15));
                }
            }
            
            public uint film_grain_params_present
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 16) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111101111111111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 16));
                }
            }
            
            public uint timing_info_present_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 17) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111011111111111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 17));
                }
            }
            
            public uint initial_display_delay_present_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 18) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111110111111111111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 18));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 19) & 0b1111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000001111111111111111111)) | ((((uint)value) & (unchecked((uint)0b1111111111111)) << 19));
                }
            }
        }
        
        public unsafe partial struct StdVideoAV1SequenceHeader
        {
            public vulkan.StdVideoAV1SequenceHeaderFlags flags;
            
            public vulkan.StdVideoAV1Profile seq_profile;
            
            public byte frame_width_bits_minus_1;
            
            public byte frame_height_bits_minus_1;
            
            public ushort max_frame_width_minus_1;
            
            public ushort max_frame_height_minus_1;
            
            public byte delta_frame_id_length_minus_2;
            
            public byte additional_frame_id_length_minus_1;
            
            public byte order_hint_bits_minus_1;
            
            public byte seq_force_integer_mv;
            
            public byte seq_force_screen_content_tools;
            
            public fixed byte reserved1[5];
            
            public vulkan.StdVideoAV1ColorConfig* pColorConfig;
            
            public vulkan.StdVideoAV1TimingInfo* pTimingInfo;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
namespace XenoAtom.Interop
{
    public static unsafe partial class vulkan
    {
        public partial struct StdVideoEncodeH265WeightTableFlags
        {
            public ushort luma_weight_l0_flag;
            
            public ushort chroma_weight_l0_flag;
            
            public ushort luma_weight_l1_flag;
            
            public ushort chroma_weight_l1_flag;
        }
        
        public unsafe partial struct StdVideoEncodeH265WeightTable
        {
            public vulkan.StdVideoEncodeH265WeightTableFlags flags;
            
            public byte luma_log2_weight_denom;
            
            public sbyte delta_chroma_log2_weight_denom;
            
            public fixed byte delta_luma_weight_l0[15];
            
            public fixed byte luma_offset_l0[15];
            
            public FixedArray15<FixedArray2<sbyte>> delta_chroma_weight_l0;
            
            public FixedArray15<FixedArray2<sbyte>> delta_chroma_offset_l0;
            
            public fixed byte delta_luma_weight_l1[15];
            
            public fixed byte luma_offset_l1[15];
            
            public FixedArray15<FixedArray2<sbyte>> delta_chroma_weight_l1;
            
            public FixedArray15<FixedArray2<sbyte>> delta_chroma_offset_l1;
        }
        
        public partial struct StdVideoEncodeH265SliceSegmentHeaderFlags
        {
            private uint __bitfield__0;
            
            public uint first_slice_segment_in_pic_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint dependent_slice_segment_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint slice_sao_luma_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111011)) | ((((uint)value) & (unchecked((uint)0b1)) << 2));
                }
            }
            
            public uint slice_sao_chroma_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 3) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111110111)) | ((((uint)value) & (unchecked((uint)0b1)) << 3));
                }
            }
            
            public uint num_ref_idx_active_override_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 4) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111101111)) | ((((uint)value) & (unchecked((uint)0b1)) << 4));
                }
            }
            
            public uint mvd_l1_zero_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 5) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111011111)) | ((((uint)value) & (unchecked((uint)0b1)) << 5));
                }
            }
            
            public uint cabac_init_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 6) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111110111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 6));
                }
            }
            
            public uint cu_chroma_qp_offset_enabled_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 7) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111101111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 7));
                }
            }
            
            public uint deblocking_filter_override_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 8) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111011111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 8));
                }
            }
            
            public uint slice_deblocking_filter_disabled_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 9) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111110111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 9));
                }
            }
            
            public uint collocated_from_l0_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 10) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111101111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 10));
                }
            }
            
            public uint slice_loop_filter_across_slices_enabled_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 11) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111011111111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 11));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 12) & 0b11111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000111111111111)) | ((((uint)value) & (unchecked((uint)0b11111111111111111111)) << 12));
                }
            }
        }
        
        public partial struct StdVideoEncodeH265SliceSegmentHeader
        {
            public vulkan.StdVideoEncodeH265SliceSegmentHeaderFlags flags;
            
            public vulkan.StdVideoH265SliceType slice_type;
            
            public uint slice_segment_address;
            
            public byte collocated_ref_idx;
            
            public byte MaxNumMergeCand;
            
            public sbyte slice_cb_qp_offset;
            
            public sbyte slice_cr_qp_offset;
            
            public sbyte slice_beta_offset_div2;
            
            public sbyte slice_tc_offset_div2;
            
            public sbyte slice_act_y_qp_offset;
            
            public sbyte slice_act_cb_qp_offset;
            
            public sbyte slice_act_cr_qp_offset;
            
            public sbyte slice_qp_delta;
            
            public ushort reserved1;
            
            public vulkan.StdVideoEncodeH265WeightTable* pWeightTable;
        }
        
        public partial struct StdVideoEncodeH265ReferenceListsInfoFlags
        {
            private uint __bitfield__0;
            
            public uint ref_pic_list_modification_flag_l0
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint ref_pic_list_modification_flag_l1
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000011)) | ((((uint)value) & (unchecked((uint)0b111111111111111111111111111111)) << 2));
                }
            }
        }
        
        public unsafe partial struct StdVideoEncodeH265ReferenceListsInfo
        {
            public vulkan.StdVideoEncodeH265ReferenceListsInfoFlags flags;
            
            public byte num_ref_idx_l0_active_minus1;
            
            public byte num_ref_idx_l1_active_minus1;
            
            public fixed byte RefPicList0[15];
            
            public fixed byte RefPicList1[15];
            
            public fixed byte list_entry_l0[15];
            
            public fixed byte list_entry_l1[15];
        }
        
        public partial struct StdVideoEncodeH265PictureInfoFlags
        {
            private uint __bitfield__0;
            
            public uint is_reference
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint IrapPicFlag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint used_for_long_term_reference
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111011)) | ((((uint)value) & (unchecked((uint)0b1)) << 2));
                }
            }
            
            public uint discardable_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 3) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111110111)) | ((((uint)value) & (unchecked((uint)0b1)) << 3));
                }
            }
            
            public uint cross_layer_bla_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 4) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111101111)) | ((((uint)value) & (unchecked((uint)0b1)) << 4));
                }
            }
            
            public uint pic_output_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 5) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111011111)) | ((((uint)value) & (unchecked((uint)0b1)) << 5));
                }
            }
            
            public uint no_output_of_prior_pics_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 6) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111110111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 6));
                }
            }
            
            public uint short_term_ref_pic_set_sps_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 7) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111101111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 7));
                }
            }
            
            public uint slice_temporal_mvp_enabled_flag
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 8) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111011111111)) | ((((uint)value) & (unchecked((uint)0b1)) << 8));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 9) & 0b11111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000111111111)) | ((((uint)value) & (unchecked((uint)0b11111111111111111111111)) << 9));
                }
            }
        }
        
        public unsafe partial struct StdVideoEncodeH265LongTermRefPics
        {
            public byte num_long_term_sps;
            
            public byte num_long_term_pics;
            
            public fixed byte lt_idx_sps[32];
            
            public fixed byte poc_lsb_lt[16];
            
            public ushort used_by_curr_pic_lt_flag;
            
            public fixed byte delta_poc_msb_present_flag[48];
            
            public fixed byte delta_poc_msb_cycle_lt[48];
        }
        
        public unsafe partial struct StdVideoEncodeH265PictureInfo
        {
            public vulkan.StdVideoEncodeH265PictureInfoFlags flags;
            
            public vulkan.StdVideoH265PictureType pic_type;
            
            public byte sps_video_parameter_set_id;
            
            public byte pps_seq_parameter_set_id;
            
            public byte pps_pic_parameter_set_id;
            
            public byte short_term_ref_pic_set_idx;
            
            public int PicOrderCntVal;
            
            public byte TemporalId;
            
            public fixed byte reserved1[7];
            
            public vulkan.StdVideoEncodeH265ReferenceListsInfo* pRefLists;
            
            public vulkan.StdVideoH265ShortTermRefPicSet* pShortTermRefPicSet;
            
            public vulkan.StdVideoEncodeH265LongTermRefPics* pLongTermRefPics;
        }
        
        public partial struct StdVideoEncodeH265ReferenceInfoFlags
        {
            private uint __bitfield__0;
            
            public uint used_for_long_term_reference
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 0) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111110)) | ((((uint)value) & (unchecked((uint)0b1)) << 0));
                }
            }
            
            public uint unused_for_reference
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 1) & 0b1));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b11111111111111111111111111111101)) | ((((uint)value) & (unchecked((uint)0b1)) << 1));
                }
            }
            
            public uint reserved
            {
                get
                {
                    return unchecked((uint)((__bitfield__0 >> 2) & 0b111111111111111111111111111111));
                }
                set
                {
                    __bitfield__0 = (__bitfield__0 & unchecked((uint)0b00000000000000000000000000000011)) | ((((uint)value) & (unchecked((uint)0b111111111111111111111111111111)) << 2));
                }
            }
        }
        
        public partial struct StdVideoEncodeH265ReferenceInfo
        {
            public vulkan.StdVideoEncodeH265ReferenceInfoFlags flags;
            
            public vulkan.StdVideoH265PictureType pic_type;
            
            public int PicOrderCntVal;
            
            public byte TemporalId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
namespace XenoAtom.Interop
{
    using System.Runtime.InteropServices;
    
    using System.Runtime.CompilerServices;
    
    public static unsafe partial class musl
    {
        public partial struct mq_attr
        {
            public nint mq_flags;
            
            public nint mq_maxmsg;
            
            public nint mq_msgsize;
            
            public nint mq_curmsgs;
            
            public FixedArray4<nint> __unused;
        }
        
        public readonly partial struct mqd_t : IEquatable<musl.mqd_t>
        {
            public mqd_t(int value) => this.Value = value;
            
            public int Value { get; }
            
            public override bool Equals(object obj) => obj is mqd_t other && Equals(other);
            
            public bool Equals(mqd_t other) => Value.Equals(other.Value);
            
            public override int GetHashCode() => Value.GetHashCode();
            
            public override string ToString() => Value.ToString();
            
            public static implicit operator int (musl.mqd_t from) => from.Value;
            
            public static implicit operator musl.mqd_t (int from) => new musl.mqd_t(from);
            
            public static bool operator ==(mqd_t left, mqd_t right) => left.Equals(right);
            
            public static bool operator !=(mqd_t left, mqd_t right) => !left.Equals(right);
        }
        
        /// <summary>
        /// Close a message queue descriptor
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_close")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_close(musl.mqd_t mqdes);
        
        /// <summary>
        /// Get/set message queue attributes
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_getattr")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_getattr(musl.mqd_t mqdes, ref musl.mq_attr attr);
        
        /// <summary>
        /// Register for notification when a message is available
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_notify")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_notify(musl.mqd_t mqdes, in musl.sigevent sevp);
        
        /// <summary>
        /// Open a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_open")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial musl.mqd_t mq_open(byte* name, int oflag);
        
        /// <summary>
        /// Open a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_open")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial musl.mqd_t mq_open([global::System.Runtime.InteropServices.Marshalling.MarshalUsing(typeof(Utf8CustomMarshaller))] ReadOnlySpan<char> name, int oflag);
        
        /// <summary>
        /// Receive a message from a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_receive")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial nint mq_receive(musl.mqd_t mqdes, byte* msg_ptr, nuint msg_len, ref uint msg_prio);
        
        /// <summary>
        /// Send a message to a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_send")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_send(musl.mqd_t mqdes, byte* msg_ptr, nuint msg_len, uint msg_prio);
        
        /// <summary>
        /// Send a message to a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_send")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_send(musl.mqd_t mqdes, [global::System.Runtime.InteropServices.Marshalling.MarshalUsing(typeof(Utf8CustomMarshaller))] ReadOnlySpan<char> msg_ptr, nuint msg_len, uint msg_prio);
        
        /// <summary>
        /// Get/set message queue attributes
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_setattr")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_setattr(musl.mqd_t mqdes, in musl.mq_attr newattr, ref musl.mq_attr oldattr);
        
        /// <summary>
        /// Receive a message from a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_timedreceive")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial nint mq_timedreceive(musl.mqd_t mqdes, byte* msg_ptr, nuint msg_len, ref uint msg_prio, in musl.timespec abs_timeout);
        
        /// <summary>
        /// Send a message to a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_timedsend")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_timedsend(musl.mqd_t mqdes, byte* msg_ptr, nuint msg_len, uint msg_prio, in musl.timespec abs_timeout);
        
        /// <summary>
        /// Send a message to a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_timedsend")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_timedsend(musl.mqd_t mqdes, [global::System.Runtime.InteropServices.Marshalling.MarshalUsing(typeof(Utf8CustomMarshaller))] ReadOnlySpan<char> msg_ptr, nuint msg_len, uint msg_prio, in musl.timespec abs_timeout);
        
        /// <summary>
        /// Remove a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_unlink")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_unlink(byte* name);
        
        /// <summary>
        /// Remove a message queue
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "mq_unlink")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int mq_unlink([global::System.Runtime.InteropServices.Marshalling.MarshalUsing(typeof(Utf8CustomMarshaller))] ReadOnlySpan<char> name);
    }
}

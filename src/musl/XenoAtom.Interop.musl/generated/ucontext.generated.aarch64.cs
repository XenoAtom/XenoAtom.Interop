//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XenoAtom.Interop
{
    using System.Runtime.InteropServices;
    
    using System.Runtime.CompilerServices;
    
    public static unsafe partial class musl
    {
        public static unsafe partial class aarch64
        {
            public const int NGREG = 34;
            
            /// <summary>
            /// Get or set the user context
            /// </summary>
            [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "getcontext")]
            [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
            public static partial int getcontext(ref musl.aarch64.ucontext ucp);
            
            /// <summary>
            /// Manipulate user context
            /// </summary>
            [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "makecontext")]
            [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
            public static partial void makecontext(ref musl.aarch64.ucontext ucp, delegate*unmanaged[Cdecl]<void> func, int argc);
            
            /// <summary>
            /// Get or set the user context
            /// </summary>
            [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "setcontext")]
            [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
            public static partial int setcontext(in musl.aarch64.ucontext ucp);
            
            /// <summary>
            /// Manipulate user context
            /// </summary>
            [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "swapcontext")]
            [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
            public static partial int swapcontext(ref musl.aarch64.ucontext oucp, in musl.aarch64.ucontext ucp);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace XenoAtom.Interop
{
    using System.Runtime.InteropServices;
    
    using System.Runtime.CompilerServices;
    
    public static unsafe partial class musl
    {
        public unsafe partial struct acct_t
        {
            public byte ac_flag;
            
            public ushort ac_uid;
            
            public ushort ac_gid;
            
            public ushort ac_tty;
            
            public uint ac_btime;
            
            public musl.comp_t ac_utime;
            
            public musl.comp_t ac_stime;
            
            public musl.comp_t ac_etime;
            
            public musl.comp_t ac_mem;
            
            public musl.comp_t ac_io;
            
            public musl.comp_t ac_rw;
            
            public musl.comp_t ac_minflt;
            
            public musl.comp_t ac_majflt;
            
            public musl.comp_t ac_swaps;
            
            public uint ac_exitcode;
            
            public fixed byte ac_comm[17];
            
            public fixed byte ac_pad[10];
        }
        
        public readonly partial struct comp_t : IEquatable<comp_t>
        {
            public comp_t(ushort value) => this.Value = value;
            
            public ushort Value { get; }
            
            public override bool Equals(object obj) => obj is comp_t other && Equals(other);
            
            public bool Equals(comp_t other) => Value.Equals(other.Value);
            
            public override int GetHashCode() => Value.GetHashCode();
            
            public override string ToString() => Value.ToString();
            
            public static implicit operator ushort (musl.comp_t from) => from.Value;
            
            public static implicit operator musl.comp_t (ushort from) => new musl.comp_t(from);
            
            public static bool operator ==(comp_t left, comp_t right) => left.Equals(right);
            
            public static bool operator !=(comp_t left, comp_t right) => !left.Equals(right);
        }
        
        public unsafe partial struct acct_v3
        {
            public byte ac_flag;
            
            public byte ac_version;
            
            public ushort ac_tty;
            
            public uint ac_exitcode;
            
            public uint ac_uid;
            
            public uint ac_gid;
            
            public uint ac_pid;
            
            public uint ac_ppid;
            
            public uint ac_btime;
            
            public float ac_etime;
            
            public musl.comp_t ac_utime;
            
            public musl.comp_t ac_stime;
            
            public musl.comp_t ac_mem;
            
            public musl.comp_t ac_io;
            
            public musl.comp_t ac_rw;
            
            public musl.comp_t ac_minflt;
            
            public musl.comp_t ac_majflt;
            
            public musl.comp_t ac_swaps;
            
            public fixed byte ac_comm[16];
        }
    }
}

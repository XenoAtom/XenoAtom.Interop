//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
namespace XenoAtom.Interop
{
    using System.Runtime.InteropServices;
    
    using System.Runtime.CompilerServices;
    
    public static unsafe partial class musl
    {
        public unsafe partial struct inotify_event
        {
            public int wd;
            
            public uint mask;
            
            public uint cookie;
            
            public uint len;
            
            public fixed byte name[1];
        }
        
        /// <summary>
        /// Set the close-on-exec
        /// ( FD_CLOEXEC )
        /// flag on the new file descriptor.
        /// See the description of the
        /// O_CLOEXEC
        /// flag in
        /// open (2)
        /// for reasons why this may be useful.
        /// </summary>
        public const int IN_CLOEXEC = 524288;
        
        /// <summary>
        /// Set the
        /// O_NONBLOCK
        /// file status flag on the open file description (see
        /// open (2))
        /// referred to by the new file descriptor.
        /// Using this flag saves extra calls to
        /// fcntl (2)
        /// to achieve the same result.
        /// </summary>
        public const int IN_NONBLOCK = 2048;
        
        public const int IN_ACCESS = 1;
        
        public const int IN_MODIFY = 2;
        
        public const int IN_ATTRIB = 4;
        
        public const int IN_CLOSE_WRITE = 8;
        
        public const int IN_CLOSE_NOWRITE = 16;
        
        public const int IN_CLOSE = 24;
        
        public const int IN_OPEN = 32;
        
        public const int IN_MOVED_FROM = 64;
        
        public const int IN_MOVED_TO = 128;
        
        public const int IN_MOVE = 192;
        
        public const int IN_CREATE = 256;
        
        public const int IN_DELETE = 512;
        
        public const int IN_DELETE_SELF = 1024;
        
        public const int IN_MOVE_SELF = 2048;
        
        public const int IN_ALL_EVENTS = 4095;
        
        public const int IN_UNMOUNT = 8192;
        
        public const int IN_Q_OVERFLOW = 16384;
        
        public const int IN_IGNORED = 32768;
        
        public const int IN_ONLYDIR = 16777216;
        
        public const int IN_DONT_FOLLOW = 33554432;
        
        public const int IN_EXCL_UNLINK = 67108864;
        
        public const int IN_MASK_CREATE = 268435456;
        
        public const int IN_MASK_ADD = 536870912;
        
        public const int IN_ISDIR = 1073741824;
        
        public const int IN_ONESHOT = -2147483648;
        
        /// <summary>
        /// Initialize an inotify instance
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "inotify_init")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int inotify_init();
        
        /// <summary>
        /// Initialize an inotify instance
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "inotify_init1")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int inotify_init1(int flags);
        
        /// <summary>
        /// Add a watch to an initialized inotify instance
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "inotify_add_watch")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int inotify_add_watch(int fd, byte* pathname, uint mask);
        
        /// <summary>
        /// Add a watch to an initialized inotify instance
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "inotify_add_watch")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int inotify_add_watch(int fd, [global::System.Runtime.InteropServices.Marshalling.MarshalUsing(typeof(Utf8CustomMarshaller))] ReadOnlySpan<char> pathname, uint mask);
        
        /// <summary>
        /// Remove an existing watch from an inotify instance
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "inotify_rm_watch")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int inotify_rm_watch(int fd, int wd);
    }
}

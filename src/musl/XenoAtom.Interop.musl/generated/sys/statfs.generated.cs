//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
namespace XenoAtom.Interop
{
    using System.Runtime.InteropServices;
    
    using System.Runtime.CompilerServices;
    
    public static unsafe partial class musl
    {
        public unsafe partial struct __fsid_t
        {
            public fixed int __val[2];
        }
        
        public readonly partial struct fsid_t : IEquatable<musl.fsid_t>
        {
            public fsid_t(musl.__fsid_t value) => this.Value = value;
            
            public musl.__fsid_t Value { get; }
            
            public override bool Equals(object obj) => obj is fsid_t other && Equals(other);
            
            public bool Equals(fsid_t other) => Value.Equals(other.Value);
            
            public override int GetHashCode() => Value.GetHashCode();
            
            public override string ToString() => Value.ToString();
            
            public static implicit operator musl.__fsid_t (musl.fsid_t from) => from.Value;
            
            public static implicit operator musl.fsid_t (musl.__fsid_t from) => new musl.fsid_t(from);
            
            public static bool operator ==(fsid_t left, fsid_t right) => left.Equals(right);
            
            public static bool operator !=(fsid_t left, fsid_t right) => !left.Equals(right);
        }
        
        /// <summary>
        /// Get filesystem statistics
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "statfs")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int statfs(byte* path, ref musl.statfs_t buf);
        
        /// <summary>
        /// Get filesystem statistics
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "statfs")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int statfs([global::System.Runtime.InteropServices.Marshalling.MarshalUsing(typeof(Utf8CustomMarshaller))] ReadOnlySpan<char> path, ref musl.statfs_t buf);
        
        /// <summary>
        /// Get filesystem statistics
        /// </summary>
        [global::System.Runtime.InteropServices.LibraryImport(LibraryName, EntryPoint = "fstatfs")]
        [UnmanagedCallConv(CallConvs = new Type[] { typeof(CallConvCdecl) })]
        public static partial int fstatfs(int fd, ref musl.statfs_t buf);
    }
}
